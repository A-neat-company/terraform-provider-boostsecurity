// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package boostsecurity

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
	"github.com/google/uuid"
)

// AccountAutoAssignmentAccountAutoAssignment includes the requested fields of the GraphQL type AccountAutoAssignment.
type AccountAutoAssignmentAccountAutoAssignment struct {
	Analyzers []AccountAutoAssignmentAccountAutoAssignmentAnalyzersAutoAssignmentAnalyzer `json:"analyzers"`
}

// GetAnalyzers returns AccountAutoAssignmentAccountAutoAssignment.Analyzers, and is useful for accessing the field via an interface.
func (v *AccountAutoAssignmentAccountAutoAssignment) GetAnalyzers() []AccountAutoAssignmentAccountAutoAssignmentAnalyzersAutoAssignmentAnalyzer {
	return v.Analyzers
}

// AccountAutoAssignmentAccountAutoAssignmentAnalyzersAutoAssignmentAnalyzer includes the requested fields of the GraphQL type AutoAssignmentAnalyzer.
type AccountAutoAssignmentAccountAutoAssignmentAnalyzersAutoAssignmentAnalyzer struct {
	Id string `json:"id"`
}

// GetId returns AccountAutoAssignmentAccountAutoAssignmentAnalyzersAutoAssignmentAnalyzer.Id, and is useful for accessing the field via an interface.
func (v *AccountAutoAssignmentAccountAutoAssignmentAnalyzersAutoAssignmentAnalyzer) GetId() string {
	return v.Id
}

// AccountAutoAssignmentResponse is returned by AccountAutoAssignment on success.
type AccountAutoAssignmentResponse struct {
	AccountAutoAssignment AccountAutoAssignmentAccountAutoAssignment `json:"accountAutoAssignment"`
}

// GetAccountAutoAssignment returns AccountAutoAssignmentResponse.AccountAutoAssignment, and is useful for accessing the field via an interface.
func (v *AccountAutoAssignmentResponse) GetAccountAutoAssignment() AccountAutoAssignmentAccountAutoAssignment {
	return v.AccountAutoAssignment
}

type Activity string

const (
	ActivityInactive Activity = "INACTIVE"
	ActivityPending  Activity = "PENDING"
	ActivityActive   Activity = "ACTIVE"
	ActivityError    Activity = "ERROR"
)

// ApplyProvisionPlanApplyProvisionPlanMutationResult includes the requested fields of the GraphQL interface MutationResult.
//
// ApplyProvisionPlanApplyProvisionPlanMutationResult is implemented by the following types:
// ApplyProvisionPlanApplyProvisionPlanOperationError
// ApplyProvisionPlanApplyProvisionPlanOperationSuccess
type ApplyProvisionPlanApplyProvisionPlanMutationResult interface {
	implementsGraphQLInterfaceApplyProvisionPlanApplyProvisionPlanMutationResult()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *ApplyProvisionPlanApplyProvisionPlanOperationError) implementsGraphQLInterfaceApplyProvisionPlanApplyProvisionPlanMutationResult() {
}
func (v *ApplyProvisionPlanApplyProvisionPlanOperationSuccess) implementsGraphQLInterfaceApplyProvisionPlanApplyProvisionPlanMutationResult() {
}

func __unmarshalApplyProvisionPlanApplyProvisionPlanMutationResult(b []byte, v *ApplyProvisionPlanApplyProvisionPlanMutationResult) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "OperationError":
		*v = new(ApplyProvisionPlanApplyProvisionPlanOperationError)
		return json.Unmarshal(b, *v)
	case "OperationSuccess":
		*v = new(ApplyProvisionPlanApplyProvisionPlanOperationSuccess)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MutationResult.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for ApplyProvisionPlanApplyProvisionPlanMutationResult: "%v"`, tn.TypeName)
	}
}

func __marshalApplyProvisionPlanApplyProvisionPlanMutationResult(v *ApplyProvisionPlanApplyProvisionPlanMutationResult) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *ApplyProvisionPlanApplyProvisionPlanOperationError:
		typename = "OperationError"

		result := struct {
			TypeName string `json:"__typename"`
			*ApplyProvisionPlanApplyProvisionPlanOperationError
		}{typename, v}
		return json.Marshal(result)
	case *ApplyProvisionPlanApplyProvisionPlanOperationSuccess:
		typename = "OperationSuccess"

		result := struct {
			TypeName string `json:"__typename"`
			*ApplyProvisionPlanApplyProvisionPlanOperationSuccess
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for ApplyProvisionPlanApplyProvisionPlanMutationResult: "%T"`, v)
	}
}

// ApplyProvisionPlanApplyProvisionPlanOperationError includes the requested fields of the GraphQL type OperationError.
type ApplyProvisionPlanApplyProvisionPlanOperationError struct {
	Typename     string `json:"__typename"`
	ErrorMessage string `json:"errorMessage"`
	ErrorType    string `json:"errorType"`
}

// GetTypename returns ApplyProvisionPlanApplyProvisionPlanOperationError.Typename, and is useful for accessing the field via an interface.
func (v *ApplyProvisionPlanApplyProvisionPlanOperationError) GetTypename() string { return v.Typename }

// GetErrorMessage returns ApplyProvisionPlanApplyProvisionPlanOperationError.ErrorMessage, and is useful for accessing the field via an interface.
func (v *ApplyProvisionPlanApplyProvisionPlanOperationError) GetErrorMessage() string {
	return v.ErrorMessage
}

// GetErrorType returns ApplyProvisionPlanApplyProvisionPlanOperationError.ErrorType, and is useful for accessing the field via an interface.
func (v *ApplyProvisionPlanApplyProvisionPlanOperationError) GetErrorType() string {
	return v.ErrorType
}

// ApplyProvisionPlanApplyProvisionPlanOperationSuccess includes the requested fields of the GraphQL type OperationSuccess.
type ApplyProvisionPlanApplyProvisionPlanOperationSuccess struct {
	Typename string `json:"__typename"`
}

// GetTypename returns ApplyProvisionPlanApplyProvisionPlanOperationSuccess.Typename, and is useful for accessing the field via an interface.
func (v *ApplyProvisionPlanApplyProvisionPlanOperationSuccess) GetTypename() string {
	return v.Typename
}

// ApplyProvisionPlanResponse is returned by ApplyProvisionPlan on success.
type ApplyProvisionPlanResponse struct {
	ApplyProvisionPlan ApplyProvisionPlanApplyProvisionPlanMutationResult `json:"-"`
}

// GetApplyProvisionPlan returns ApplyProvisionPlanResponse.ApplyProvisionPlan, and is useful for accessing the field via an interface.
func (v *ApplyProvisionPlanResponse) GetApplyProvisionPlan() ApplyProvisionPlanApplyProvisionPlanMutationResult {
	return v.ApplyProvisionPlan
}

func (v *ApplyProvisionPlanResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*ApplyProvisionPlanResponse
		ApplyProvisionPlan json.RawMessage `json:"applyProvisionPlan"`
		graphql.NoUnmarshalJSON
	}
	firstPass.ApplyProvisionPlanResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.ApplyProvisionPlan
		src := firstPass.ApplyProvisionPlan
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalApplyProvisionPlanApplyProvisionPlanMutationResult(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal ApplyProvisionPlanResponse.ApplyProvisionPlan: %w", err)
			}
		}
	}
	return nil
}

type __premarshalApplyProvisionPlanResponse struct {
	ApplyProvisionPlan json.RawMessage `json:"applyProvisionPlan"`
}

func (v *ApplyProvisionPlanResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *ApplyProvisionPlanResponse) __premarshalJSON() (*__premarshalApplyProvisionPlanResponse, error) {
	var retval __premarshalApplyProvisionPlanResponse

	{

		dst := &retval.ApplyProvisionPlan
		src := v.ApplyProvisionPlan
		var err error
		*dst, err = __marshalApplyProvisionPlanApplyProvisionPlanMutationResult(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal ApplyProvisionPlanResponse.ApplyProvisionPlan: %w", err)
		}
	}
	return &retval, nil
}

type AssetSelection struct {
	SelectionType SelectionType `json:"selectionType"`
	AssetIds      []string      `json:"assetIds"`
	AssetType     AssetType     `json:"assetType"`
}

// GetSelectionType returns AssetSelection.SelectionType, and is useful for accessing the field via an interface.
func (v *AssetSelection) GetSelectionType() SelectionType { return v.SelectionType }

// GetAssetIds returns AssetSelection.AssetIds, and is useful for accessing the field via an interface.
func (v *AssetSelection) GetAssetIds() []string { return v.AssetIds }

// GetAssetType returns AssetSelection.AssetType, and is useful for accessing the field via an interface.
func (v *AssetSelection) GetAssetType() AssetType { return v.AssetType }

type AssetType string

const (
	AssetTypeAccount    AssetType = "ACCOUNT"
	AssetTypeCollection AssetType = "COLLECTION"
	AssetTypeResource   AssetType = "RESOURCE"
)

// ConnectionData includes the GraphQL fields of Connection requested by the fragment ConnectionData.
//
// ConnectionData is implemented by the following types:
// ConnectionDataCollectionsConnection
// ConnectionDataProvidersConnection
// ConnectionDataResourcesConnection
type ConnectionData interface {
	implementsGraphQLInterfaceConnectionData()
	// GetTotalCount returns the interface-field "totalCount" from its implementation.
	GetTotalCount() int
	// GetPageInfo returns the interface-field "pageInfo" from its implementation.
	GetPageInfo() ConnectionDataPageInfo
}

func (v *ConnectionDataCollectionsConnection) implementsGraphQLInterfaceConnectionData() {}
func (v *ConnectionDataProvidersConnection) implementsGraphQLInterfaceConnectionData()   {}
func (v *ConnectionDataResourcesConnection) implementsGraphQLInterfaceConnectionData()   {}

func __unmarshalConnectionData(b []byte, v *ConnectionData) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "CollectionsConnection":
		*v = new(ConnectionDataCollectionsConnection)
		return json.Unmarshal(b, *v)
	case "ProvidersConnection":
		*v = new(ConnectionDataProvidersConnection)
		return json.Unmarshal(b, *v)
	case "ResourcesConnection":
		*v = new(ConnectionDataResourcesConnection)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing Connection.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for ConnectionData: "%v"`, tn.TypeName)
	}
}

func __marshalConnectionData(v *ConnectionData) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *ConnectionDataCollectionsConnection:
		typename = "CollectionsConnection"

		result := struct {
			TypeName string `json:"__typename"`
			*ConnectionDataCollectionsConnection
		}{typename, v}
		return json.Marshal(result)
	case *ConnectionDataProvidersConnection:
		typename = "ProvidersConnection"

		result := struct {
			TypeName string `json:"__typename"`
			*ConnectionDataProvidersConnection
		}{typename, v}
		return json.Marshal(result)
	case *ConnectionDataResourcesConnection:
		typename = "ResourcesConnection"

		result := struct {
			TypeName string `json:"__typename"`
			*ConnectionDataResourcesConnection
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for ConnectionData: "%T"`, v)
	}
}

// ConnectionData includes the GraphQL fields of CollectionsConnection requested by the fragment ConnectionData.
type ConnectionDataCollectionsConnection struct {
	TotalCount int                    `json:"totalCount"`
	PageInfo   ConnectionDataPageInfo `json:"pageInfo"`
}

// GetTotalCount returns ConnectionDataCollectionsConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *ConnectionDataCollectionsConnection) GetTotalCount() int { return v.TotalCount }

// GetPageInfo returns ConnectionDataCollectionsConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *ConnectionDataCollectionsConnection) GetPageInfo() ConnectionDataPageInfo { return v.PageInfo }

// ConnectionDataPageInfo includes the requested fields of the GraphQL type PageInfo.
type ConnectionDataPageInfo struct {
	HasNextPage     bool   `json:"hasNextPage"`
	HasPreviousPage bool   `json:"hasPreviousPage"`
	StartCursor     string `json:"startCursor"`
	EndCursor       string `json:"endCursor"`
}

// GetHasNextPage returns ConnectionDataPageInfo.HasNextPage, and is useful for accessing the field via an interface.
func (v *ConnectionDataPageInfo) GetHasNextPage() bool { return v.HasNextPage }

// GetHasPreviousPage returns ConnectionDataPageInfo.HasPreviousPage, and is useful for accessing the field via an interface.
func (v *ConnectionDataPageInfo) GetHasPreviousPage() bool { return v.HasPreviousPage }

// GetStartCursor returns ConnectionDataPageInfo.StartCursor, and is useful for accessing the field via an interface.
func (v *ConnectionDataPageInfo) GetStartCursor() string { return v.StartCursor }

// GetEndCursor returns ConnectionDataPageInfo.EndCursor, and is useful for accessing the field via an interface.
func (v *ConnectionDataPageInfo) GetEndCursor() string { return v.EndCursor }

// ConnectionData includes the GraphQL fields of ProvidersConnection requested by the fragment ConnectionData.
type ConnectionDataProvidersConnection struct {
	TotalCount int                    `json:"totalCount"`
	PageInfo   ConnectionDataPageInfo `json:"pageInfo"`
}

// GetTotalCount returns ConnectionDataProvidersConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *ConnectionDataProvidersConnection) GetTotalCount() int { return v.TotalCount }

// GetPageInfo returns ConnectionDataProvidersConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *ConnectionDataProvidersConnection) GetPageInfo() ConnectionDataPageInfo { return v.PageInfo }

// ConnectionData includes the GraphQL fields of ResourcesConnection requested by the fragment ConnectionData.
type ConnectionDataResourcesConnection struct {
	TotalCount int                    `json:"totalCount"`
	PageInfo   ConnectionDataPageInfo `json:"pageInfo"`
}

// GetTotalCount returns ConnectionDataResourcesConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *ConnectionDataResourcesConnection) GetTotalCount() int { return v.TotalCount }

// GetPageInfo returns ConnectionDataResourcesConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *ConnectionDataResourcesConnection) GetPageInfo() ConnectionDataPageInfo { return v.PageInfo }

// ExternalDataValidationResponse is returned by ExternalDataValidation on success.
type ExternalDataValidationResponse struct {
	SecurityPosture ExternalDataValidationSecurityPosture `json:"securityPosture"`
}

// GetSecurityPosture returns ExternalDataValidationResponse.SecurityPosture, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationResponse) GetSecurityPosture() ExternalDataValidationSecurityPosture {
	return v.SecurityPosture
}

// ExternalDataValidationSecurityPosture includes the requested fields of the GraphQL type SecurityPosture.
type ExternalDataValidationSecurityPosture struct {
	Providers ExternalDataValidationSecurityPostureProvidersProvidersConnection `json:"providers"`
}

// GetProviders returns ExternalDataValidationSecurityPosture.Providers, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPosture) GetProviders() ExternalDataValidationSecurityPostureProvidersProvidersConnection {
	return v.Providers
}

// ExternalDataValidationSecurityPostureProvidersProvidersConnection includes the requested fields of the GraphQL type ProvidersConnection.
type ExternalDataValidationSecurityPostureProvidersProvidersConnection struct {
	Edges []ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdge `json:"edges"`
}

// GetEdges returns ExternalDataValidationSecurityPostureProvidersProvidersConnection.Edges, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnection) GetEdges() []ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdge {
	return v.Edges
}

// ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdge includes the requested fields of the GraphQL type ProviderEdge.
type ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdge struct {
	Node ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider `json:"node"`
}

// GetNode returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdge.Node, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdge) GetNode() ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider {
	return v.Node
}

// ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider includes the requested fields of the GraphQL type Provider.
type ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider struct {
	ProviderId  string                                                                                                                         `json:"providerId"`
	Collections ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection `json:"collections"`
}

// GetProviderId returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider.ProviderId, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider) GetProviderId() string {
	return v.ProviderId
}

// GetCollections returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider.Collections, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider) GetCollections() ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection {
	return v.Collections
}

// ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection includes the requested fields of the GraphQL type CollectionsConnection.
type ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection struct {
	Edges []ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge `json:"edges"`
}

// GetEdges returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection.Edges, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection) GetEdges() []ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge {
	return v.Edges
}

// ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge includes the requested fields of the GraphQL type CollectionEdge.
type ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge struct {
	Node ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection `json:"node"`
}

// GetNode returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge.Node, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge) GetNode() ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection {
	return v.Node
}

// ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection includes the requested fields of the GraphQL type Collection.
type ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection struct {
	CollectionId          string `json:"collectionId"`
	Name                  string `json:"name"`
	ScannerDataCollection `json:"-"`
	PolicyDataCollection  `json:"-"`
	Resources             ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection `json:"resources"`
}

// GetCollectionId returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.CollectionId, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetCollectionId() string {
	return v.CollectionId
}

// GetName returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.Name, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetName() string {
	return v.Name
}

// GetResources returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.Resources, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetResources() ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection {
	return v.Resources
}

// GetSecurityCoverage returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.SecurityCoverage, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetSecurityCoverage() []ScannerDataSecurityCoverageSecurityCategoryCoverage {
	return v.ScannerDataCollection.SecurityCoverage
}

// GetScanners returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.Scanners, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetScanners() []ScannerDataScannersScanner {
	return v.ScannerDataCollection.Scanners
}

// GetPolicy returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.Policy, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetPolicy() PolicyDataPolicy {
	return v.PolicyDataCollection.Policy
}

func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection
		graphql.NoUnmarshalJSON
	}
	firstPass.ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ScannerDataCollection)
	if err != nil {
		return err
	}
	err = json.Unmarshal(
		b, &v.PolicyDataCollection)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection struct {
	CollectionId string `json:"collectionId"`

	Name string `json:"name"`

	Resources ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection `json:"resources"`

	SecurityCoverage []ScannerDataSecurityCoverageSecurityCategoryCoverage `json:"securityCoverage"`

	Scanners []ScannerDataScannersScanner `json:"scanners"`

	Policy PolicyDataPolicy `json:"policy"`
}

func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) __premarshalJSON() (*__premarshalExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection, error) {
	var retval __premarshalExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection

	retval.CollectionId = v.CollectionId
	retval.Name = v.Name
	retval.Resources = v.Resources
	retval.SecurityCoverage = v.ScannerDataCollection.SecurityCoverage
	retval.Scanners = v.ScannerDataCollection.Scanners
	retval.Policy = v.PolicyDataCollection.Policy
	return &retval, nil
}

// ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection includes the requested fields of the GraphQL type ResourcesConnection.
type ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection struct {
	Edges []ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge `json:"edges"`
}

// GetEdges returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection.Edges, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection) GetEdges() []ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge {
	return v.Edges
}

// ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge includes the requested fields of the GraphQL type ResourceEdge.
type ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge struct {
	Node ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource `json:"node"`
}

// GetNode returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge.Node, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge) GetNode() ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource {
	return v.Node
}

// ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource includes the requested fields of the GraphQL type Resource.
type ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource struct {
	ResourceId          string `json:"resourceId"`
	ScannerDataResource `json:"-"`
	PolicyDataResource  `json:"-"`
}

// GetResourceId returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource.ResourceId, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) GetResourceId() string {
	return v.ResourceId
}

// GetSecurityCoverage returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource.SecurityCoverage, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) GetSecurityCoverage() []ScannerDataSecurityCoverageSecurityCategoryCoverage {
	return v.ScannerDataResource.SecurityCoverage
}

// GetScanners returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource.Scanners, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) GetScanners() []ScannerDataScannersScanner {
	return v.ScannerDataResource.Scanners
}

// GetPolicy returns ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource.Policy, and is useful for accessing the field via an interface.
func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) GetPolicy() PolicyDataPolicy {
	return v.PolicyDataResource.Policy
}

func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource
		graphql.NoUnmarshalJSON
	}
	firstPass.ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ScannerDataResource)
	if err != nil {
		return err
	}
	err = json.Unmarshal(
		b, &v.PolicyDataResource)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource struct {
	ResourceId string `json:"resourceId"`

	SecurityCoverage []ScannerDataSecurityCoverageSecurityCategoryCoverage `json:"securityCoverage"`

	Scanners []ScannerDataScannersScanner `json:"scanners"`

	Policy PolicyDataPolicy `json:"policy"`
}

func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *ExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) __premarshalJSON() (*__premarshalExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource, error) {
	var retval __premarshalExternalDataValidationSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource

	retval.ResourceId = v.ResourceId
	retval.SecurityCoverage = v.ScannerDataResource.SecurityCoverage
	retval.Scanners = v.ScannerDataResource.Scanners
	retval.Policy = v.PolicyDataResource.Policy
	return &retval, nil
}

// FilterData includes the GraphQL fields of FilterCount requested by the fragment FilterData.
//
// FilterData is implemented by the following types:
// FilterDataBasicFilterCount
// FilterDataCollectionFilterDisplayFilterCountWithDisplay
// FilterDataPolicyFilterDisplayFilterCountWithDisplay
// FilterDataProvisionedAnalyzerFilterCount
type FilterData interface {
	implementsGraphQLInterfaceFilterData()
	// GetValue returns the interface-field "value" from its implementation.
	GetValue() string
	// GetCount returns the interface-field "count" from its implementation.
	GetCount() int
}

func (v *FilterDataBasicFilterCount) implementsGraphQLInterfaceFilterData() {}
func (v *FilterDataCollectionFilterDisplayFilterCountWithDisplay) implementsGraphQLInterfaceFilterData() {
}
func (v *FilterDataPolicyFilterDisplayFilterCountWithDisplay) implementsGraphQLInterfaceFilterData() {
}
func (v *FilterDataProvisionedAnalyzerFilterCount) implementsGraphQLInterfaceFilterData() {}

func __unmarshalFilterData(b []byte, v *FilterData) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "BasicFilterCount":
		*v = new(FilterDataBasicFilterCount)
		return json.Unmarshal(b, *v)
	case "CollectionFilterDisplayFilterCountWithDisplay":
		*v = new(FilterDataCollectionFilterDisplayFilterCountWithDisplay)
		return json.Unmarshal(b, *v)
	case "PolicyFilterDisplayFilterCountWithDisplay":
		*v = new(FilterDataPolicyFilterDisplayFilterCountWithDisplay)
		return json.Unmarshal(b, *v)
	case "ProvisionedAnalyzerFilterCount":
		*v = new(FilterDataProvisionedAnalyzerFilterCount)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing FilterCount.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for FilterData: "%v"`, tn.TypeName)
	}
}

func __marshalFilterData(v *FilterData) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *FilterDataBasicFilterCount:
		typename = "BasicFilterCount"

		result := struct {
			TypeName string `json:"__typename"`
			*FilterDataBasicFilterCount
		}{typename, v}
		return json.Marshal(result)
	case *FilterDataCollectionFilterDisplayFilterCountWithDisplay:
		typename = "CollectionFilterDisplayFilterCountWithDisplay"

		result := struct {
			TypeName string `json:"__typename"`
			*FilterDataCollectionFilterDisplayFilterCountWithDisplay
		}{typename, v}
		return json.Marshal(result)
	case *FilterDataPolicyFilterDisplayFilterCountWithDisplay:
		typename = "PolicyFilterDisplayFilterCountWithDisplay"

		result := struct {
			TypeName string `json:"__typename"`
			*FilterDataPolicyFilterDisplayFilterCountWithDisplay
		}{typename, v}
		return json.Marshal(result)
	case *FilterDataProvisionedAnalyzerFilterCount:
		typename = "ProvisionedAnalyzerFilterCount"

		result := struct {
			TypeName string `json:"__typename"`
			*FilterDataProvisionedAnalyzerFilterCount
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for FilterData: "%T"`, v)
	}
}

// FilterData includes the GraphQL fields of BasicFilterCount requested by the fragment FilterData.
type FilterDataBasicFilterCount struct {
	Value string `json:"value"`
	Count int    `json:"count"`
}

// GetValue returns FilterDataBasicFilterCount.Value, and is useful for accessing the field via an interface.
func (v *FilterDataBasicFilterCount) GetValue() string { return v.Value }

// GetCount returns FilterDataBasicFilterCount.Count, and is useful for accessing the field via an interface.
func (v *FilterDataBasicFilterCount) GetCount() int { return v.Count }

// FilterData includes the GraphQL fields of CollectionFilterDisplayFilterCountWithDisplay requested by the fragment FilterData.
type FilterDataCollectionFilterDisplayFilterCountWithDisplay struct {
	Value string `json:"value"`
	Count int    `json:"count"`
}

// GetValue returns FilterDataCollectionFilterDisplayFilterCountWithDisplay.Value, and is useful for accessing the field via an interface.
func (v *FilterDataCollectionFilterDisplayFilterCountWithDisplay) GetValue() string { return v.Value }

// GetCount returns FilterDataCollectionFilterDisplayFilterCountWithDisplay.Count, and is useful for accessing the field via an interface.
func (v *FilterDataCollectionFilterDisplayFilterCountWithDisplay) GetCount() int { return v.Count }

// FilterData includes the GraphQL fields of PolicyFilterDisplayFilterCountWithDisplay requested by the fragment FilterData.
type FilterDataPolicyFilterDisplayFilterCountWithDisplay struct {
	Value string `json:"value"`
	Count int    `json:"count"`
}

// GetValue returns FilterDataPolicyFilterDisplayFilterCountWithDisplay.Value, and is useful for accessing the field via an interface.
func (v *FilterDataPolicyFilterDisplayFilterCountWithDisplay) GetValue() string { return v.Value }

// GetCount returns FilterDataPolicyFilterDisplayFilterCountWithDisplay.Count, and is useful for accessing the field via an interface.
func (v *FilterDataPolicyFilterDisplayFilterCountWithDisplay) GetCount() int { return v.Count }

// FilterData includes the GraphQL fields of ProvisionedAnalyzerFilterCount requested by the fragment FilterData.
type FilterDataProvisionedAnalyzerFilterCount struct {
	Value string `json:"value"`
	Count int    `json:"count"`
}

// GetValue returns FilterDataProvisionedAnalyzerFilterCount.Value, and is useful for accessing the field via an interface.
func (v *FilterDataProvisionedAnalyzerFilterCount) GetValue() string { return v.Value }

// GetCount returns FilterDataProvisionedAnalyzerFilterCount.Count, and is useful for accessing the field via an interface.
func (v *FilterDataProvisionedAnalyzerFilterCount) GetCount() int { return v.Count }

// FilteredProviderProvider includes the requested fields of the GraphQL type Provider.
type FilteredProviderProvider struct {
	Stats       FilteredProviderProviderStats                            `json:"stats"`
	Collections FilteredProviderProviderCollectionsCollectionsConnection `json:"collections"`
}

// GetStats returns FilteredProviderProvider.Stats, and is useful for accessing the field via an interface.
func (v *FilteredProviderProvider) GetStats() FilteredProviderProviderStats { return v.Stats }

// GetCollections returns FilteredProviderProvider.Collections, and is useful for accessing the field via an interface.
func (v *FilteredProviderProvider) GetCollections() FilteredProviderProviderCollectionsCollectionsConnection {
	return v.Collections
}

// FilteredProviderProviderCollectionsCollectionsConnection includes the requested fields of the GraphQL type CollectionsConnection.
type FilteredProviderProviderCollectionsCollectionsConnection struct {
	Edges []FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdge `json:"edges"`
}

// GetEdges returns FilteredProviderProviderCollectionsCollectionsConnection.Edges, and is useful for accessing the field via an interface.
func (v *FilteredProviderProviderCollectionsCollectionsConnection) GetEdges() []FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdge {
	return v.Edges
}

// FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdge includes the requested fields of the GraphQL type CollectionEdge.
type FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdge struct {
	Node FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection `json:"node"`
}

// GetNode returns FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdge.Node, and is useful for accessing the field via an interface.
func (v *FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdge) GetNode() FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection {
	return v.Node
}

// FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection includes the requested fields of the GraphQL type Collection.
type FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection struct {
	CollectionId string                                                                                                                `json:"collectionId"`
	Resources    FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection `json:"resources"`
}

// GetCollectionId returns FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.CollectionId, and is useful for accessing the field via an interface.
func (v *FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetCollectionId() string {
	return v.CollectionId
}

// GetResources returns FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.Resources, and is useful for accessing the field via an interface.
func (v *FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetResources() FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection {
	return v.Resources
}

// FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection includes the requested fields of the GraphQL type ResourcesConnection.
type FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection struct {
	Edges []FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge `json:"edges"`
}

// GetEdges returns FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection.Edges, and is useful for accessing the field via an interface.
func (v *FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection) GetEdges() []FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge {
	return v.Edges
}

// FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge includes the requested fields of the GraphQL type ResourceEdge.
type FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge struct {
	Node FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource `json:"node"`
}

// GetNode returns FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge.Node, and is useful for accessing the field via an interface.
func (v *FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge) GetNode() FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource {
	return v.Node
}

// FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource includes the requested fields of the GraphQL type Resource.
type FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource struct {
	ResourceId string `json:"resourceId"`
}

// GetResourceId returns FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource.ResourceId, and is useful for accessing the field via an interface.
func (v *FilteredProviderProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) GetResourceId() string {
	return v.ResourceId
}

// FilteredProviderProviderStats includes the requested fields of the GraphQL type ProviderStats.
type FilteredProviderProviderStats struct {
	TotalResources int `json:"totalResources"`
}

// GetTotalResources returns FilteredProviderProviderStats.TotalResources, and is useful for accessing the field via an interface.
func (v *FilteredProviderProviderStats) GetTotalResources() int { return v.TotalResources }

// FilteredProviderResponse is returned by FilteredProvider on success.
type FilteredProviderResponse struct {
	Provider FilteredProviderProvider `json:"provider"`
}

// GetProvider returns FilteredProviderResponse.Provider, and is useful for accessing the field via an interface.
func (v *FilteredProviderResponse) GetProvider() FilteredProviderProvider { return v.Provider }

// FilteredSecurityPostureResponse is returned by FilteredSecurityPosture on success.
type FilteredSecurityPostureResponse struct {
	SecurityPosture FilteredSecurityPostureSecurityPosture `json:"securityPosture"`
}

// GetSecurityPosture returns FilteredSecurityPostureResponse.SecurityPosture, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureResponse) GetSecurityPosture() FilteredSecurityPostureSecurityPosture {
	return v.SecurityPosture
}

// FilteredSecurityPostureSecurityPosture includes the requested fields of the GraphQL type SecurityPosture.
type FilteredSecurityPostureSecurityPosture struct {
	Filters   FilteredSecurityPostureSecurityPostureFiltersAvailableFilters      `json:"filters"`
	Providers FilteredSecurityPostureSecurityPostureProvidersProvidersConnection `json:"providers"`
}

// GetFilters returns FilteredSecurityPostureSecurityPosture.Filters, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPosture) GetFilters() FilteredSecurityPostureSecurityPostureFiltersAvailableFilters {
	return v.Filters
}

// GetProviders returns FilteredSecurityPostureSecurityPosture.Providers, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPosture) GetProviders() FilteredSecurityPostureSecurityPostureProvidersProvidersConnection {
	return v.Providers
}

// FilteredSecurityPostureSecurityPostureFiltersAvailableFilters includes the requested fields of the GraphQL type AvailableFilters.
type FilteredSecurityPostureSecurityPostureFiltersAvailableFilters struct {
	ResourceProvisioningStatus []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount              `json:"resourceProvisioningStatus"`
	Collection                 []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay `json:"collection"`
	MissingCoverage            []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount                         `json:"missingCoverage"`
	ResourceAttribute          []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount                       `json:"resourceAttribute"`
	PolicyType                 []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount                              `json:"policyType"`
	Policy                     []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay         `json:"policy"`
	ProvisionedAnalyzer        []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount       `json:"provisionedAnalyzer"`
}

// GetResourceProvisioningStatus returns FilteredSecurityPostureSecurityPostureFiltersAvailableFilters.ResourceProvisioningStatus, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFilters) GetResourceProvisioningStatus() []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount {
	return v.ResourceProvisioningStatus
}

// GetCollection returns FilteredSecurityPostureSecurityPostureFiltersAvailableFilters.Collection, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFilters) GetCollection() []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay {
	return v.Collection
}

// GetMissingCoverage returns FilteredSecurityPostureSecurityPostureFiltersAvailableFilters.MissingCoverage, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFilters) GetMissingCoverage() []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount {
	return v.MissingCoverage
}

// GetResourceAttribute returns FilteredSecurityPostureSecurityPostureFiltersAvailableFilters.ResourceAttribute, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFilters) GetResourceAttribute() []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount {
	return v.ResourceAttribute
}

// GetPolicyType returns FilteredSecurityPostureSecurityPostureFiltersAvailableFilters.PolicyType, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFilters) GetPolicyType() []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount {
	return v.PolicyType
}

// GetPolicy returns FilteredSecurityPostureSecurityPostureFiltersAvailableFilters.Policy, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFilters) GetPolicy() []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay {
	return v.Policy
}

// GetProvisionedAnalyzer returns FilteredSecurityPostureSecurityPostureFiltersAvailableFilters.ProvisionedAnalyzer, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFilters) GetProvisionedAnalyzer() []FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount {
	return v.ProvisionedAnalyzer
}

// FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay includes the requested fields of the GraphQL type CollectionFilterDisplayFilterCountWithDisplay.
type FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay struct {
	FilterDataCollectionFilterDisplayFilterCountWithDisplay `json:"-"`
	Display                                                 FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay `json:"display"`
}

// GetDisplay returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay.Display, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay) GetDisplay() FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay {
	return v.Display
}

// GetValue returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay.Value, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay) GetValue() string {
	return v.FilterDataCollectionFilterDisplayFilterCountWithDisplay.Value
}

// GetCount returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay.Count, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay) GetCount() int {
	return v.FilterDataCollectionFilterDisplayFilterCountWithDisplay.Count
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay
		graphql.NoUnmarshalJSON
	}
	firstPass.FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataCollectionFilterDisplayFilterCountWithDisplay)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay struct {
	Display FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay `json:"display"`

	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay) __premarshalJSON() (*__premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay, error) {
	var retval __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay

	retval.Display = v.Display
	retval.Value = v.FilterDataCollectionFilterDisplayFilterCountWithDisplay.Value
	retval.Count = v.FilterDataCollectionFilterDisplayFilterCountWithDisplay.Count
	return &retval, nil
}

// FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay includes the requested fields of the GraphQL type CollectionFilterDisplay.
type FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay struct {
	Name     string `json:"name"`
	Provider string `json:"provider"`
}

// GetName returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay.Name, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay) GetName() string {
	return v.Name
}

// GetProvider returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay.Provider, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay) GetProvider() string {
	return v.Provider
}

// FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount includes the requested fields of the GraphQL type BasicFilterCount.
type FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount struct {
	FilterDataBasicFilterCount `json:"-"`
}

// GetValue returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount.Value, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount) GetValue() string {
	return v.FilterDataBasicFilterCount.Value
}

// GetCount returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount.Count, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount) GetCount() int {
	return v.FilterDataBasicFilterCount.Count
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount
		graphql.NoUnmarshalJSON
	}
	firstPass.FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataBasicFilterCount)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount struct {
	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount) __premarshalJSON() (*__premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount, error) {
	var retval __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount

	retval.Value = v.FilterDataBasicFilterCount.Value
	retval.Count = v.FilterDataBasicFilterCount.Count
	return &retval, nil
}

// FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay includes the requested fields of the GraphQL type PolicyFilterDisplayFilterCountWithDisplay.
type FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay struct {
	FilterDataPolicyFilterDisplayFilterCountWithDisplay `json:"-"`
	Display                                             FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay `json:"display"`
}

// GetDisplay returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay.Display, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay) GetDisplay() FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay {
	return v.Display
}

// GetValue returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay.Value, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay) GetValue() string {
	return v.FilterDataPolicyFilterDisplayFilterCountWithDisplay.Value
}

// GetCount returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay.Count, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay) GetCount() int {
	return v.FilterDataPolicyFilterDisplayFilterCountWithDisplay.Count
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay
		graphql.NoUnmarshalJSON
	}
	firstPass.FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataPolicyFilterDisplayFilterCountWithDisplay)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay struct {
	Display FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay `json:"display"`

	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay) __premarshalJSON() (*__premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay, error) {
	var retval __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay

	retval.Display = v.Display
	retval.Value = v.FilterDataPolicyFilterDisplayFilterCountWithDisplay.Value
	retval.Count = v.FilterDataPolicyFilterDisplayFilterCountWithDisplay.Count
	return &retval, nil
}

// FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay includes the requested fields of the GraphQL type PolicyFilterDisplay.
type FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay struct {
	Name string `json:"name"`
}

// GetName returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay.Name, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay) GetName() string {
	return v.Name
}

// FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount includes the requested fields of the GraphQL type BasicFilterCount.
type FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount struct {
	FilterDataBasicFilterCount `json:"-"`
}

// GetValue returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount.Value, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount) GetValue() string {
	return v.FilterDataBasicFilterCount.Value
}

// GetCount returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount.Count, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount) GetCount() int {
	return v.FilterDataBasicFilterCount.Count
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount
		graphql.NoUnmarshalJSON
	}
	firstPass.FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataBasicFilterCount)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount struct {
	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount) __premarshalJSON() (*__premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount, error) {
	var retval __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount

	retval.Value = v.FilterDataBasicFilterCount.Value
	retval.Count = v.FilterDataBasicFilterCount.Count
	return &retval, nil
}

// FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount includes the requested fields of the GraphQL type ProvisionedAnalyzerFilterCount.
type FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount struct {
	FilterDataProvisionedAnalyzerFilterCount `json:"-"`
	Display                                  FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay `json:"display"`
}

// GetDisplay returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount.Display, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount) GetDisplay() FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay {
	return v.Display
}

// GetValue returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount.Value, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount) GetValue() string {
	return v.FilterDataProvisionedAnalyzerFilterCount.Value
}

// GetCount returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount.Count, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount) GetCount() int {
	return v.FilterDataProvisionedAnalyzerFilterCount.Count
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount
		graphql.NoUnmarshalJSON
	}
	firstPass.FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataProvisionedAnalyzerFilterCount)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount struct {
	Display FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay `json:"display"`

	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount) __premarshalJSON() (*__premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount, error) {
	var retval __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount

	retval.Display = v.Display
	retval.Value = v.FilterDataProvisionedAnalyzerFilterCount.Value
	retval.Count = v.FilterDataProvisionedAnalyzerFilterCount.Count
	return &retval, nil
}

// FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay includes the requested fields of the GraphQL type ProvisionedAnalyzerFilterDisplay.
type FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay struct {
	AnalyzerId   string `json:"analyzerId"`
	AnalyzerName string `json:"analyzerName"`
	RulesetName  string `json:"rulesetName"`
}

// GetAnalyzerId returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay.AnalyzerId, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay) GetAnalyzerId() string {
	return v.AnalyzerId
}

// GetAnalyzerName returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay.AnalyzerName, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay) GetAnalyzerName() string {
	return v.AnalyzerName
}

// GetRulesetName returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay.RulesetName, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay) GetRulesetName() string {
	return v.RulesetName
}

// FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount includes the requested fields of the GraphQL type BasicFilterCount.
type FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount struct {
	FilterDataBasicFilterCount `json:"-"`
}

// GetValue returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount.Value, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount) GetValue() string {
	return v.FilterDataBasicFilterCount.Value
}

// GetCount returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount.Count, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount) GetCount() int {
	return v.FilterDataBasicFilterCount.Count
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount
		graphql.NoUnmarshalJSON
	}
	firstPass.FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataBasicFilterCount)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount struct {
	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount) __premarshalJSON() (*__premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount, error) {
	var retval __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount

	retval.Value = v.FilterDataBasicFilterCount.Value
	retval.Count = v.FilterDataBasicFilterCount.Count
	return &retval, nil
}

// FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount includes the requested fields of the GraphQL type BasicFilterCount.
type FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount struct {
	FilterDataBasicFilterCount `json:"-"`
}

// GetValue returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount.Value, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount) GetValue() string {
	return v.FilterDataBasicFilterCount.Value
}

// GetCount returns FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount.Count, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount) GetCount() int {
	return v.FilterDataBasicFilterCount.Count
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount
		graphql.NoUnmarshalJSON
	}
	firstPass.FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataBasicFilterCount)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount struct {
	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *FilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount) __premarshalJSON() (*__premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount, error) {
	var retval __premarshalFilteredSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount

	retval.Value = v.FilterDataBasicFilterCount.Value
	retval.Count = v.FilterDataBasicFilterCount.Count
	return &retval, nil
}

// FilteredSecurityPostureSecurityPostureProvidersProvidersConnection includes the requested fields of the GraphQL type ProvidersConnection.
type FilteredSecurityPostureSecurityPostureProvidersProvidersConnection struct {
	Edges []FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge `json:"edges"`
}

// GetEdges returns FilteredSecurityPostureSecurityPostureProvidersProvidersConnection.Edges, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureProvidersProvidersConnection) GetEdges() []FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge {
	return v.Edges
}

// FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge includes the requested fields of the GraphQL type ProviderEdge.
type FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge struct {
	Node FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider `json:"node"`
}

// GetNode returns FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge.Node, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge) GetNode() FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider {
	return v.Node
}

// FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider includes the requested fields of the GraphQL type Provider.
type FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider struct {
	ProviderId  string                                                                                                                          `json:"providerId"`
	Stats       FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats                            `json:"stats"`
	Collections FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection `json:"collections"`
}

// GetProviderId returns FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider.ProviderId, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider) GetProviderId() string {
	return v.ProviderId
}

// GetStats returns FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider.Stats, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider) GetStats() FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats {
	return v.Stats
}

// GetCollections returns FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider.Collections, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider) GetCollections() FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection {
	return v.Collections
}

// FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection includes the requested fields of the GraphQL type CollectionsConnection.
type FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection struct {
	Edges []FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge `json:"edges"`
}

// GetEdges returns FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection.Edges, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection) GetEdges() []FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge {
	return v.Edges
}

// FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge includes the requested fields of the GraphQL type CollectionEdge.
type FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge struct {
	Node FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection `json:"node"`
}

// GetNode returns FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge.Node, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge) GetNode() FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection {
	return v.Node
}

// FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection includes the requested fields of the GraphQL type Collection.
type FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection struct {
	CollectionId string                                                                                                                                                                                       `json:"collectionId"`
	Resources    FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection `json:"resources"`
}

// GetCollectionId returns FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.CollectionId, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetCollectionId() string {
	return v.CollectionId
}

// GetResources returns FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.Resources, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetResources() FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection {
	return v.Resources
}

// FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection includes the requested fields of the GraphQL type ResourcesConnection.
type FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection struct {
	Edges []FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge `json:"edges"`
}

// GetEdges returns FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection.Edges, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection) GetEdges() []FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge {
	return v.Edges
}

// FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge includes the requested fields of the GraphQL type ResourceEdge.
type FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge struct {
	Node FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource `json:"node"`
}

// GetNode returns FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge.Node, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge) GetNode() FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource {
	return v.Node
}

// FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource includes the requested fields of the GraphQL type Resource.
type FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource struct {
	ResourceId string `json:"resourceId"`
}

// GetResourceId returns FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource.ResourceId, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) GetResourceId() string {
	return v.ResourceId
}

// FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats includes the requested fields of the GraphQL type ProviderStats.
type FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats struct {
	TotalResources int `json:"totalResources"`
}

// GetTotalResources returns FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats.TotalResources, and is useful for accessing the field via an interface.
func (v *FilteredSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats) GetTotalResources() int {
	return v.TotalResources
}

type Filters struct {
	CollectionProvisioningStatuses []string `json:"collectionProvisioningStatuses"`
	ResourceProvisioningStatuses   []string `json:"resourceProvisioningStatuses"`
	Collections                    []string `json:"collections"`
	MissingCoverages               []string `json:"missingCoverages"`
	ResourceAttributes             []string `json:"resourceAttributes"`
	PolicyType                     []string `json:"policyType"`
	Policy                         []string `json:"policy"`
	ProvisionedAnalyzers           []string `json:"provisionedAnalyzers"`
	Search                         string   `json:"search"`
}

// GetCollectionProvisioningStatuses returns Filters.CollectionProvisioningStatuses, and is useful for accessing the field via an interface.
func (v *Filters) GetCollectionProvisioningStatuses() []string {
	return v.CollectionProvisioningStatuses
}

// GetResourceProvisioningStatuses returns Filters.ResourceProvisioningStatuses, and is useful for accessing the field via an interface.
func (v *Filters) GetResourceProvisioningStatuses() []string { return v.ResourceProvisioningStatuses }

// GetCollections returns Filters.Collections, and is useful for accessing the field via an interface.
func (v *Filters) GetCollections() []string { return v.Collections }

// GetMissingCoverages returns Filters.MissingCoverages, and is useful for accessing the field via an interface.
func (v *Filters) GetMissingCoverages() []string { return v.MissingCoverages }

// GetResourceAttributes returns Filters.ResourceAttributes, and is useful for accessing the field via an interface.
func (v *Filters) GetResourceAttributes() []string { return v.ResourceAttributes }

// GetPolicyType returns Filters.PolicyType, and is useful for accessing the field via an interface.
func (v *Filters) GetPolicyType() []string { return v.PolicyType }

// GetPolicy returns Filters.Policy, and is useful for accessing the field via an interface.
func (v *Filters) GetPolicy() []string { return v.Policy }

// GetProvisionedAnalyzers returns Filters.ProvisionedAnalyzers, and is useful for accessing the field via an interface.
func (v *Filters) GetProvisionedAnalyzers() []string { return v.ProvisionedAnalyzers }

// GetSearch returns Filters.Search, and is useful for accessing the field via an interface.
func (v *Filters) GetSearch() string { return v.Search }

type OperationAction string

const (
	OperationActionApply OperationAction = "APPLY"
	OperationActionClear OperationAction = "CLEAR"
)

type PolicyAssignment string

const (
	PolicyAssignmentDirect    PolicyAssignment = "DIRECT"
	PolicyAssignmentInherited PolicyAssignment = "INHERITED"
)

// PolicyAssignmentSummaryPolicyAssignmentSummary includes the requested fields of the GraphQL type PolicyAssignmentSummary.
type PolicyAssignmentSummaryPolicyAssignmentSummary struct {
	Policies []PolicyAssignmentSummaryPolicyAssignmentSummaryPoliciesPolicyAssignmentStats `json:"policies"`
}

// GetPolicies returns PolicyAssignmentSummaryPolicyAssignmentSummary.Policies, and is useful for accessing the field via an interface.
func (v *PolicyAssignmentSummaryPolicyAssignmentSummary) GetPolicies() []PolicyAssignmentSummaryPolicyAssignmentSummaryPoliciesPolicyAssignmentStats {
	return v.Policies
}

// PolicyAssignmentSummaryPolicyAssignmentSummaryPoliciesPolicyAssignmentStats includes the requested fields of the GraphQL type PolicyAssignmentStats.
type PolicyAssignmentSummaryPolicyAssignmentSummaryPoliciesPolicyAssignmentStats struct {
	Id               string `json:"id"`
	TotalAccounts    int    `json:"totalAccounts"`
	TotalCollections int    `json:"totalCollections"`
	TotalResources   int    `json:"totalResources"`
}

// GetId returns PolicyAssignmentSummaryPolicyAssignmentSummaryPoliciesPolicyAssignmentStats.Id, and is useful for accessing the field via an interface.
func (v *PolicyAssignmentSummaryPolicyAssignmentSummaryPoliciesPolicyAssignmentStats) GetId() string {
	return v.Id
}

// GetTotalAccounts returns PolicyAssignmentSummaryPolicyAssignmentSummaryPoliciesPolicyAssignmentStats.TotalAccounts, and is useful for accessing the field via an interface.
func (v *PolicyAssignmentSummaryPolicyAssignmentSummaryPoliciesPolicyAssignmentStats) GetTotalAccounts() int {
	return v.TotalAccounts
}

// GetTotalCollections returns PolicyAssignmentSummaryPolicyAssignmentSummaryPoliciesPolicyAssignmentStats.TotalCollections, and is useful for accessing the field via an interface.
func (v *PolicyAssignmentSummaryPolicyAssignmentSummaryPoliciesPolicyAssignmentStats) GetTotalCollections() int {
	return v.TotalCollections
}

// GetTotalResources returns PolicyAssignmentSummaryPolicyAssignmentSummaryPoliciesPolicyAssignmentStats.TotalResources, and is useful for accessing the field via an interface.
func (v *PolicyAssignmentSummaryPolicyAssignmentSummaryPoliciesPolicyAssignmentStats) GetTotalResources() int {
	return v.TotalResources
}

// PolicyAssignmentSummaryResponse is returned by PolicyAssignmentSummary on success.
type PolicyAssignmentSummaryResponse struct {
	PolicyAssignmentSummary PolicyAssignmentSummaryPolicyAssignmentSummary `json:"policyAssignmentSummary"`
}

// GetPolicyAssignmentSummary returns PolicyAssignmentSummaryResponse.PolicyAssignmentSummary, and is useful for accessing the field via an interface.
func (v *PolicyAssignmentSummaryResponse) GetPolicyAssignmentSummary() PolicyAssignmentSummaryPolicyAssignmentSummary {
	return v.PolicyAssignmentSummary
}

// PolicyData includes the GraphQL fields of HasPolicy requested by the fragment PolicyData.
//
// PolicyData is implemented by the following types:
// PolicyDataAccount
// PolicyDataCollection
// PolicyDataResource
type PolicyData interface {
	implementsGraphQLInterfacePolicyData()
	// GetPolicy returns the interface-field "policy" from its implementation.
	GetPolicy() PolicyDataPolicy
}

func (v *PolicyDataAccount) implementsGraphQLInterfacePolicyData()    {}
func (v *PolicyDataCollection) implementsGraphQLInterfacePolicyData() {}
func (v *PolicyDataResource) implementsGraphQLInterfacePolicyData()   {}

func __unmarshalPolicyData(b []byte, v *PolicyData) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "Account":
		*v = new(PolicyDataAccount)
		return json.Unmarshal(b, *v)
	case "Collection":
		*v = new(PolicyDataCollection)
		return json.Unmarshal(b, *v)
	case "Resource":
		*v = new(PolicyDataResource)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing HasPolicy.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for PolicyData: "%v"`, tn.TypeName)
	}
}

func __marshalPolicyData(v *PolicyData) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *PolicyDataAccount:
		typename = "Account"

		result := struct {
			TypeName string `json:"__typename"`
			*PolicyDataAccount
		}{typename, v}
		return json.Marshal(result)
	case *PolicyDataCollection:
		typename = "Collection"

		result := struct {
			TypeName string `json:"__typename"`
			*PolicyDataCollection
		}{typename, v}
		return json.Marshal(result)
	case *PolicyDataResource:
		typename = "Resource"

		result := struct {
			TypeName string `json:"__typename"`
			*PolicyDataResource
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for PolicyData: "%T"`, v)
	}
}

// PolicyData includes the GraphQL fields of Account requested by the fragment PolicyData.
type PolicyDataAccount struct {
	Policy PolicyDataPolicy `json:"policy"`
}

// GetPolicy returns PolicyDataAccount.Policy, and is useful for accessing the field via an interface.
func (v *PolicyDataAccount) GetPolicy() PolicyDataPolicy { return v.Policy }

// PolicyData includes the GraphQL fields of Collection requested by the fragment PolicyData.
type PolicyDataCollection struct {
	Policy PolicyDataPolicy `json:"policy"`
}

// GetPolicy returns PolicyDataCollection.Policy, and is useful for accessing the field via an interface.
func (v *PolicyDataCollection) GetPolicy() PolicyDataPolicy { return v.Policy }

// PolicyDataPolicy includes the requested fields of the GraphQL type Policy.
type PolicyDataPolicy struct {
	PolicyId   string           `json:"policyId"`
	Name       string           `json:"name"`
	Source     PolicySource     `json:"source"`
	Assignment PolicyAssignment `json:"assignment"`
}

// GetPolicyId returns PolicyDataPolicy.PolicyId, and is useful for accessing the field via an interface.
func (v *PolicyDataPolicy) GetPolicyId() string { return v.PolicyId }

// GetName returns PolicyDataPolicy.Name, and is useful for accessing the field via an interface.
func (v *PolicyDataPolicy) GetName() string { return v.Name }

// GetSource returns PolicyDataPolicy.Source, and is useful for accessing the field via an interface.
func (v *PolicyDataPolicy) GetSource() PolicySource { return v.Source }

// GetAssignment returns PolicyDataPolicy.Assignment, and is useful for accessing the field via an interface.
func (v *PolicyDataPolicy) GetAssignment() PolicyAssignment { return v.Assignment }

// PolicyData includes the GraphQL fields of Resource requested by the fragment PolicyData.
type PolicyDataResource struct {
	Policy PolicyDataPolicy `json:"policy"`
}

// GetPolicy returns PolicyDataResource.Policy, and is useful for accessing the field via an interface.
func (v *PolicyDataResource) GetPolicy() PolicyDataPolicy { return v.Policy }

type PolicyOperation struct {
	Action   OperationAction `json:"action"`
	PolicyId string          `json:"policyId,omitempty"`
}

// GetAction returns PolicyOperation.Action, and is useful for accessing the field via an interface.
func (v *PolicyOperation) GetAction() OperationAction { return v.Action }

// GetPolicyId returns PolicyOperation.PolicyId, and is useful for accessing the field via an interface.
func (v *PolicyOperation) GetPolicyId() string { return v.PolicyId }

type PolicySource string

const (
	PolicySourceDesigner PolicySource = "DESIGNER"
	PolicySourceAsCode   PolicySource = "AS_CODE"
	PolicySourceBuiltIn  PolicySource = "BUILT_IN"
)

// ProviderCollectionProvider includes the requested fields of the GraphQL type Provider.
type ProviderCollectionProvider struct {
	Collection ProviderCollectionProviderCollection `json:"collection"`
}

// GetCollection returns ProviderCollectionProvider.Collection, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProvider) GetCollection() ProviderCollectionProviderCollection {
	return v.Collection
}

// ProviderCollectionProviderCollection includes the requested fields of the GraphQL type Collection.
type ProviderCollectionProviderCollection struct {
	CollectionId string                                                           `json:"collectionId"`
	Resources    ProviderCollectionProviderCollectionResourcesResourcesConnection `json:"resources"`
}

// GetCollectionId returns ProviderCollectionProviderCollection.CollectionId, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProviderCollection) GetCollectionId() string { return v.CollectionId }

// GetResources returns ProviderCollectionProviderCollection.Resources, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProviderCollection) GetResources() ProviderCollectionProviderCollectionResourcesResourcesConnection {
	return v.Resources
}

// ProviderCollectionProviderCollectionResourcesResourcesConnection includes the requested fields of the GraphQL type ResourcesConnection.
type ProviderCollectionProviderCollectionResourcesResourcesConnection struct {
	ConnectionDataResourcesConnection `json:"-"`
	Edges                             []ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdge `json:"edges"`
}

// GetEdges returns ProviderCollectionProviderCollectionResourcesResourcesConnection.Edges, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProviderCollectionResourcesResourcesConnection) GetEdges() []ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdge {
	return v.Edges
}

// GetTotalCount returns ProviderCollectionProviderCollectionResourcesResourcesConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProviderCollectionResourcesResourcesConnection) GetTotalCount() int {
	return v.ConnectionDataResourcesConnection.TotalCount
}

// GetPageInfo returns ProviderCollectionProviderCollectionResourcesResourcesConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProviderCollectionResourcesResourcesConnection) GetPageInfo() ConnectionDataPageInfo {
	return v.ConnectionDataResourcesConnection.PageInfo
}

func (v *ProviderCollectionProviderCollectionResourcesResourcesConnection) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*ProviderCollectionProviderCollectionResourcesResourcesConnection
		graphql.NoUnmarshalJSON
	}
	firstPass.ProviderCollectionProviderCollectionResourcesResourcesConnection = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ConnectionDataResourcesConnection)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalProviderCollectionProviderCollectionResourcesResourcesConnection struct {
	Edges []ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdge `json:"edges"`

	TotalCount int `json:"totalCount"`

	PageInfo ConnectionDataPageInfo `json:"pageInfo"`
}

func (v *ProviderCollectionProviderCollectionResourcesResourcesConnection) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *ProviderCollectionProviderCollectionResourcesResourcesConnection) __premarshalJSON() (*__premarshalProviderCollectionProviderCollectionResourcesResourcesConnection, error) {
	var retval __premarshalProviderCollectionProviderCollectionResourcesResourcesConnection

	retval.Edges = v.Edges
	retval.TotalCount = v.ConnectionDataResourcesConnection.TotalCount
	retval.PageInfo = v.ConnectionDataResourcesConnection.PageInfo
	return &retval, nil
}

// ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdge includes the requested fields of the GraphQL type ResourceEdge.
type ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdge struct {
	Cursor string                                                                                        `json:"cursor"`
	Node   ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource `json:"node"`
}

// GetCursor returns ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdge.Cursor, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdge) GetCursor() string {
	return v.Cursor
}

// GetNode returns ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdge.Node, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdge) GetNode() ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource {
	return v.Node
}

// ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource includes the requested fields of the GraphQL type Resource.
type ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource struct {
	ResourceId          string    `json:"resourceId"`
	AssetType           AssetType `json:"assetType"`
	Name                string    `json:"name"`
	PolicyDataResource  `json:"-"`
	ScannerDataResource `json:"-"`
}

// GetResourceId returns ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource.ResourceId, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) GetResourceId() string {
	return v.ResourceId
}

// GetAssetType returns ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource.AssetType, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) GetAssetType() AssetType {
	return v.AssetType
}

// GetName returns ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource.Name, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) GetName() string {
	return v.Name
}

// GetPolicy returns ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource.Policy, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) GetPolicy() PolicyDataPolicy {
	return v.PolicyDataResource.Policy
}

// GetSecurityCoverage returns ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource.SecurityCoverage, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) GetSecurityCoverage() []ScannerDataSecurityCoverageSecurityCategoryCoverage {
	return v.ScannerDataResource.SecurityCoverage
}

// GetScanners returns ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource.Scanners, and is useful for accessing the field via an interface.
func (v *ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) GetScanners() []ScannerDataScannersScanner {
	return v.ScannerDataResource.Scanners
}

func (v *ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource
		graphql.NoUnmarshalJSON
	}
	firstPass.ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.PolicyDataResource)
	if err != nil {
		return err
	}
	err = json.Unmarshal(
		b, &v.ScannerDataResource)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource struct {
	ResourceId string `json:"resourceId"`

	AssetType AssetType `json:"assetType"`

	Name string `json:"name"`

	Policy PolicyDataPolicy `json:"policy"`

	SecurityCoverage []ScannerDataSecurityCoverageSecurityCategoryCoverage `json:"securityCoverage"`

	Scanners []ScannerDataScannersScanner `json:"scanners"`
}

func (v *ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *ProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) __premarshalJSON() (*__premarshalProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource, error) {
	var retval __premarshalProviderCollectionProviderCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource

	retval.ResourceId = v.ResourceId
	retval.AssetType = v.AssetType
	retval.Name = v.Name
	retval.Policy = v.PolicyDataResource.Policy
	retval.SecurityCoverage = v.ScannerDataResource.SecurityCoverage
	retval.Scanners = v.ScannerDataResource.Scanners
	return &retval, nil
}

// ProviderCollectionResponse is returned by ProviderCollection on success.
type ProviderCollectionResponse struct {
	Provider ProviderCollectionProvider `json:"provider"`
}

// GetProvider returns ProviderCollectionResponse.Provider, and is useful for accessing the field via an interface.
func (v *ProviderCollectionResponse) GetProvider() ProviderCollectionProvider { return v.Provider }

// ProviderCollectionsProvider includes the requested fields of the GraphQL type Provider.
type ProviderCollectionsProvider struct {
	Collections ProviderCollectionsProviderCollectionsCollectionsConnection `json:"collections"`
}

// GetCollections returns ProviderCollectionsProvider.Collections, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProvider) GetCollections() ProviderCollectionsProviderCollectionsCollectionsConnection {
	return v.Collections
}

// ProviderCollectionsProviderCollectionsCollectionsConnection includes the requested fields of the GraphQL type CollectionsConnection.
type ProviderCollectionsProviderCollectionsCollectionsConnection struct {
	ConnectionDataCollectionsConnection `json:"-"`
	Edges                               []ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdge `json:"edges"`
}

// GetEdges returns ProviderCollectionsProviderCollectionsCollectionsConnection.Edges, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnection) GetEdges() []ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdge {
	return v.Edges
}

// GetTotalCount returns ProviderCollectionsProviderCollectionsCollectionsConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnection) GetTotalCount() int {
	return v.ConnectionDataCollectionsConnection.TotalCount
}

// GetPageInfo returns ProviderCollectionsProviderCollectionsCollectionsConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnection) GetPageInfo() ConnectionDataPageInfo {
	return v.ConnectionDataCollectionsConnection.PageInfo
}

func (v *ProviderCollectionsProviderCollectionsCollectionsConnection) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*ProviderCollectionsProviderCollectionsCollectionsConnection
		graphql.NoUnmarshalJSON
	}
	firstPass.ProviderCollectionsProviderCollectionsCollectionsConnection = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ConnectionDataCollectionsConnection)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalProviderCollectionsProviderCollectionsCollectionsConnection struct {
	Edges []ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdge `json:"edges"`

	TotalCount int `json:"totalCount"`

	PageInfo ConnectionDataPageInfo `json:"pageInfo"`
}

func (v *ProviderCollectionsProviderCollectionsCollectionsConnection) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *ProviderCollectionsProviderCollectionsCollectionsConnection) __premarshalJSON() (*__premarshalProviderCollectionsProviderCollectionsCollectionsConnection, error) {
	var retval __premarshalProviderCollectionsProviderCollectionsCollectionsConnection

	retval.Edges = v.Edges
	retval.TotalCount = v.ConnectionDataCollectionsConnection.TotalCount
	retval.PageInfo = v.ConnectionDataCollectionsConnection.PageInfo
	return &retval, nil
}

// ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdge includes the requested fields of the GraphQL type CollectionEdge.
type ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdge struct {
	Cursor string                                                                                       `json:"cursor"`
	Node   ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection `json:"node"`
}

// GetCursor returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdge.Cursor, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdge) GetCursor() string {
	return v.Cursor
}

// GetNode returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdge.Node, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdge) GetNode() ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection {
	return v.Node
}

// ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection includes the requested fields of the GraphQL type Collection.
type ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection struct {
	CollectionId          string                                                                                            `json:"collectionId"`
	AssetType             AssetType                                                                                         `json:"assetType"`
	Name                  string                                                                                            `json:"name"`
	BaseUrl               string                                                                                            `json:"baseUrl"`
	WebUrl                string                                                                                            `json:"webUrl"`
	Stats                 ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionStats `json:"stats"`
	PolicyDataCollection  `json:"-"`
	ScannerDataCollection `json:"-"`
	Resources             ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection `json:"resources"`
	IconUrl               string                                                                                                                   `json:"iconUrl"`
}

// GetCollectionId returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.CollectionId, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetCollectionId() string {
	return v.CollectionId
}

// GetAssetType returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.AssetType, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetAssetType() AssetType {
	return v.AssetType
}

// GetName returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.Name, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetName() string {
	return v.Name
}

// GetBaseUrl returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.BaseUrl, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetBaseUrl() string {
	return v.BaseUrl
}

// GetWebUrl returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.WebUrl, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetWebUrl() string {
	return v.WebUrl
}

// GetStats returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.Stats, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetStats() ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionStats {
	return v.Stats
}

// GetResources returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.Resources, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetResources() ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection {
	return v.Resources
}

// GetIconUrl returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.IconUrl, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetIconUrl() string {
	return v.IconUrl
}

// GetPolicy returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.Policy, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetPolicy() PolicyDataPolicy {
	return v.PolicyDataCollection.Policy
}

// GetSecurityCoverage returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.SecurityCoverage, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetSecurityCoverage() []ScannerDataSecurityCoverageSecurityCategoryCoverage {
	return v.ScannerDataCollection.SecurityCoverage
}

// GetScanners returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.Scanners, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetScanners() []ScannerDataScannersScanner {
	return v.ScannerDataCollection.Scanners
}

func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection
		graphql.NoUnmarshalJSON
	}
	firstPass.ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.PolicyDataCollection)
	if err != nil {
		return err
	}
	err = json.Unmarshal(
		b, &v.ScannerDataCollection)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection struct {
	CollectionId string `json:"collectionId"`

	AssetType AssetType `json:"assetType"`

	Name string `json:"name"`

	BaseUrl string `json:"baseUrl"`

	WebUrl string `json:"webUrl"`

	Stats ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionStats `json:"stats"`

	Resources ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection `json:"resources"`

	IconUrl string `json:"iconUrl"`

	Policy PolicyDataPolicy `json:"policy"`

	SecurityCoverage []ScannerDataSecurityCoverageSecurityCategoryCoverage `json:"securityCoverage"`

	Scanners []ScannerDataScannersScanner `json:"scanners"`
}

func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) __premarshalJSON() (*__premarshalProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection, error) {
	var retval __premarshalProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection

	retval.CollectionId = v.CollectionId
	retval.AssetType = v.AssetType
	retval.Name = v.Name
	retval.BaseUrl = v.BaseUrl
	retval.WebUrl = v.WebUrl
	retval.Stats = v.Stats
	retval.Resources = v.Resources
	retval.IconUrl = v.IconUrl
	retval.Policy = v.PolicyDataCollection.Policy
	retval.SecurityCoverage = v.ScannerDataCollection.SecurityCoverage
	retval.Scanners = v.ScannerDataCollection.Scanners
	return &retval, nil
}

// ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection includes the requested fields of the GraphQL type ResourcesConnection.
type ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection struct {
	ConnectionDataResourcesConnection `json:"-"`
	Edges                             []ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge `json:"edges"`
}

// GetEdges returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection.Edges, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection) GetEdges() []ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge {
	return v.Edges
}

// GetTotalCount returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection) GetTotalCount() int {
	return v.ConnectionDataResourcesConnection.TotalCount
}

// GetPageInfo returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection) GetPageInfo() ConnectionDataPageInfo {
	return v.ConnectionDataResourcesConnection.PageInfo
}

func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection
		graphql.NoUnmarshalJSON
	}
	firstPass.ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ConnectionDataResourcesConnection)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection struct {
	Edges []ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge `json:"edges"`

	TotalCount int `json:"totalCount"`

	PageInfo ConnectionDataPageInfo `json:"pageInfo"`
}

func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection) __premarshalJSON() (*__premarshalProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection, error) {
	var retval __premarshalProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnection

	retval.Edges = v.Edges
	retval.TotalCount = v.ConnectionDataResourcesConnection.TotalCount
	retval.PageInfo = v.ConnectionDataResourcesConnection.PageInfo
	return &retval, nil
}

// ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge includes the requested fields of the GraphQL type ResourceEdge.
type ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge struct {
	Cursor string                                                                                                                                                `json:"cursor"`
	Node   ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource `json:"node"`
}

// GetCursor returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge.Cursor, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge) GetCursor() string {
	return v.Cursor
}

// GetNode returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge.Node, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdge) GetNode() ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource {
	return v.Node
}

// ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource includes the requested fields of the GraphQL type Resource.
type ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource struct {
	ResourceId string `json:"resourceId"`
}

// GetResourceId returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource.ResourceId, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionResourcesResourcesConnectionEdgesResourceEdgeNodeResource) GetResourceId() string {
	return v.ResourceId
}

// ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionStats includes the requested fields of the GraphQL type CollectionStats.
type ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionStats struct {
	TotalNeedAttention int `json:"totalNeedAttention"`
}

// GetTotalNeedAttention returns ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionStats.TotalNeedAttention, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollectionStats) GetTotalNeedAttention() int {
	return v.TotalNeedAttention
}

// ProviderCollectionsResponse is returned by ProviderCollections on success.
type ProviderCollectionsResponse struct {
	Provider ProviderCollectionsProvider `json:"provider"`
}

// GetProvider returns ProviderCollectionsResponse.Provider, and is useful for accessing the field via an interface.
func (v *ProviderCollectionsResponse) GetProvider() ProviderCollectionsProvider { return v.Provider }

// ProviderProvider includes the requested fields of the GraphQL type Provider.
type ProviderProvider struct {
	ProviderId     string                           `json:"providerId"`
	Name           string                           `json:"name"`
	Stats          ProviderProviderStats            `json:"stats"`
	AutoAssignment []ProviderProviderAutoAssignment `json:"autoAssignment"`
}

// GetProviderId returns ProviderProvider.ProviderId, and is useful for accessing the field via an interface.
func (v *ProviderProvider) GetProviderId() string { return v.ProviderId }

// GetName returns ProviderProvider.Name, and is useful for accessing the field via an interface.
func (v *ProviderProvider) GetName() string { return v.Name }

// GetStats returns ProviderProvider.Stats, and is useful for accessing the field via an interface.
func (v *ProviderProvider) GetStats() ProviderProviderStats { return v.Stats }

// GetAutoAssignment returns ProviderProvider.AutoAssignment, and is useful for accessing the field via an interface.
func (v *ProviderProvider) GetAutoAssignment() []ProviderProviderAutoAssignment {
	return v.AutoAssignment
}

// ProviderProviderAutoAssignment includes the requested fields of the GraphQL type AutoAssignment.
type ProviderProviderAutoAssignment struct {
	Id      string `json:"id"`
	Enabled bool   `json:"enabled"`
}

// GetId returns ProviderProviderAutoAssignment.Id, and is useful for accessing the field via an interface.
func (v *ProviderProviderAutoAssignment) GetId() string { return v.Id }

// GetEnabled returns ProviderProviderAutoAssignment.Enabled, and is useful for accessing the field via an interface.
func (v *ProviderProviderAutoAssignment) GetEnabled() bool { return v.Enabled }

// ProviderProviderStats includes the requested fields of the GraphQL type ProviderStats.
type ProviderProviderStats struct {
	TotalNeedAttention int `json:"totalNeedAttention"`
	TotalResources     int `json:"totalResources"`
}

// GetTotalNeedAttention returns ProviderProviderStats.TotalNeedAttention, and is useful for accessing the field via an interface.
func (v *ProviderProviderStats) GetTotalNeedAttention() int { return v.TotalNeedAttention }

// GetTotalResources returns ProviderProviderStats.TotalResources, and is useful for accessing the field via an interface.
func (v *ProviderProviderStats) GetTotalResources() int { return v.TotalResources }

// ProviderResponse is returned by Provider on success.
type ProviderResponse struct {
	Provider ProviderProvider `json:"provider"`
}

// GetProvider returns ProviderResponse.Provider, and is useful for accessing the field via an interface.
func (v *ProviderResponse) GetProvider() ProviderProvider { return v.Provider }

// ProvisionPlanProvisionPlan includes the requested fields of the GraphQL type ProvisionPlan.
type ProvisionPlanProvisionPlan struct {
	TotalSelectedCollections int                                                      `json:"totalSelectedCollections"`
	TotalSelectedResources   int                                                      `json:"totalSelectedResources"`
	Scanners                 []ProvisionPlanProvisionPlanScannersProvisionPlanScanner `json:"scanners"`
}

// GetTotalSelectedCollections returns ProvisionPlanProvisionPlan.TotalSelectedCollections, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlan) GetTotalSelectedCollections() int {
	return v.TotalSelectedCollections
}

// GetTotalSelectedResources returns ProvisionPlanProvisionPlan.TotalSelectedResources, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlan) GetTotalSelectedResources() int { return v.TotalSelectedResources }

// GetScanners returns ProvisionPlanProvisionPlan.Scanners, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlan) GetScanners() []ProvisionPlanProvisionPlanScannersProvisionPlanScanner {
	return v.Scanners
}

// ProvisionPlanProvisionPlanScannersProvisionPlanScanner includes the requested fields of the GraphQL type ProvisionPlanScanner.
type ProvisionPlanProvisionPlanScannersProvisionPlanScanner struct {
	ScannerId                  string                                                                               `json:"scannerId"`
	ScannerName                string                                                                               `json:"scannerName"`
	Categories                 []SecurityCategory                                                                   `json:"categories"`
	TotalApplicableCollections int                                                                                  `json:"totalApplicableCollections"`
	TotalApplicableResources   int                                                                                  `json:"totalApplicableResources"`
	Availability               ProvisionPlanScannerAvailability                                                     `json:"availability"`
	Targets                    []ProvisionPlanTarget                                                                `json:"targets"`
	RulesetRequired            bool                                                                                 `json:"rulesetRequired"`
	Rulesets                   []ProvisionPlanProvisionPlanScannersProvisionPlanScannerRulesetsProvisionPlanRuleset `json:"rulesets"`
}

// GetScannerId returns ProvisionPlanProvisionPlanScannersProvisionPlanScanner.ScannerId, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlanScannersProvisionPlanScanner) GetScannerId() string {
	return v.ScannerId
}

// GetScannerName returns ProvisionPlanProvisionPlanScannersProvisionPlanScanner.ScannerName, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlanScannersProvisionPlanScanner) GetScannerName() string {
	return v.ScannerName
}

// GetCategories returns ProvisionPlanProvisionPlanScannersProvisionPlanScanner.Categories, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlanScannersProvisionPlanScanner) GetCategories() []SecurityCategory {
	return v.Categories
}

// GetTotalApplicableCollections returns ProvisionPlanProvisionPlanScannersProvisionPlanScanner.TotalApplicableCollections, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlanScannersProvisionPlanScanner) GetTotalApplicableCollections() int {
	return v.TotalApplicableCollections
}

// GetTotalApplicableResources returns ProvisionPlanProvisionPlanScannersProvisionPlanScanner.TotalApplicableResources, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlanScannersProvisionPlanScanner) GetTotalApplicableResources() int {
	return v.TotalApplicableResources
}

// GetAvailability returns ProvisionPlanProvisionPlanScannersProvisionPlanScanner.Availability, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlanScannersProvisionPlanScanner) GetAvailability() ProvisionPlanScannerAvailability {
	return v.Availability
}

// GetTargets returns ProvisionPlanProvisionPlanScannersProvisionPlanScanner.Targets, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlanScannersProvisionPlanScanner) GetTargets() []ProvisionPlanTarget {
	return v.Targets
}

// GetRulesetRequired returns ProvisionPlanProvisionPlanScannersProvisionPlanScanner.RulesetRequired, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlanScannersProvisionPlanScanner) GetRulesetRequired() bool {
	return v.RulesetRequired
}

// GetRulesets returns ProvisionPlanProvisionPlanScannersProvisionPlanScanner.Rulesets, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlanScannersProvisionPlanScanner) GetRulesets() []ProvisionPlanProvisionPlanScannersProvisionPlanScannerRulesetsProvisionPlanRuleset {
	return v.Rulesets
}

// ProvisionPlanProvisionPlanScannersProvisionPlanScannerRulesetsProvisionPlanRuleset includes the requested fields of the GraphQL type ProvisionPlanRuleset.
type ProvisionPlanProvisionPlanScannersProvisionPlanScannerRulesetsProvisionPlanRuleset struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns ProvisionPlanProvisionPlanScannersProvisionPlanScannerRulesetsProvisionPlanRuleset.Id, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlanScannersProvisionPlanScannerRulesetsProvisionPlanRuleset) GetId() string {
	return v.Id
}

// GetName returns ProvisionPlanProvisionPlanScannersProvisionPlanScannerRulesetsProvisionPlanRuleset.Name, and is useful for accessing the field via an interface.
func (v *ProvisionPlanProvisionPlanScannersProvisionPlanScannerRulesetsProvisionPlanRuleset) GetName() string {
	return v.Name
}

// ProvisionPlanResponse is returned by ProvisionPlan on success.
type ProvisionPlanResponse struct {
	ProvisionPlan ProvisionPlanProvisionPlan `json:"provisionPlan"`
}

// GetProvisionPlan returns ProvisionPlanResponse.ProvisionPlan, and is useful for accessing the field via an interface.
func (v *ProvisionPlanResponse) GetProvisionPlan() ProvisionPlanProvisionPlan { return v.ProvisionPlan }

type ProvisionPlanScannerAvailability string

const (
	ProvisionPlanScannerAvailabilityUnknown                       ProvisionPlanScannerAvailability = "UNKNOWN"
	ProvisionPlanScannerAvailabilityAvailable                     ProvisionPlanScannerAvailability = "AVAILABLE"
	ProvisionPlanScannerAvailabilityMissingExoscannerInstallation ProvisionPlanScannerAvailability = "MISSING_EXOSCANNER_INSTALLATION"
	ProvisionPlanScannerAvailabilityMissingSbomData               ProvisionPlanScannerAvailability = "MISSING_SBOM_DATA"
	ProvisionPlanScannerAvailabilityMissingScmInstallation        ProvisionPlanScannerAvailability = "MISSING_SCM_INSTALLATION"
	ProvisionPlanScannerAvailabilityMissingZtpInstallation        ProvisionPlanScannerAvailability = "MISSING_ZTP_INSTALLATION"
	ProvisionPlanScannerAvailabilityMissingConfig                 ProvisionPlanScannerAvailability = "MISSING_CONFIG"
)

type ProvisionPlanTarget string

const (
	ProvisionPlanTargetMainFlow ProvisionPlanTarget = "MAIN_FLOW"
	ProvisionPlanTargetPrFlow   ProvisionPlanTarget = "PR_FLOW"
)

type ProvisioningMethod string

const (
	ProvisioningMethodManaged ProvisioningMethod = "MANAGED"
	ProvisioningMethodManual  ProvisioningMethod = "MANUAL"
)

type ProvisioningState string

const (
	ProvisioningStateProvisioned   ProvisioningState = "PROVISIONED"
	ProvisioningStateUnprovisioned ProvisioningState = "UNPROVISIONED"
	ProvisioningStateIrrelevant    ProvisioningState = "IRRELEVANT"
)

// RemoveScannerConfigsRemoveScannerConfigsMutationResult includes the requested fields of the GraphQL interface MutationResult.
//
// RemoveScannerConfigsRemoveScannerConfigsMutationResult is implemented by the following types:
// RemoveScannerConfigsRemoveScannerConfigsOperationError
// RemoveScannerConfigsRemoveScannerConfigsOperationSuccess
type RemoveScannerConfigsRemoveScannerConfigsMutationResult interface {
	implementsGraphQLInterfaceRemoveScannerConfigsRemoveScannerConfigsMutationResult()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *RemoveScannerConfigsRemoveScannerConfigsOperationError) implementsGraphQLInterfaceRemoveScannerConfigsRemoveScannerConfigsMutationResult() {
}
func (v *RemoveScannerConfigsRemoveScannerConfigsOperationSuccess) implementsGraphQLInterfaceRemoveScannerConfigsRemoveScannerConfigsMutationResult() {
}

func __unmarshalRemoveScannerConfigsRemoveScannerConfigsMutationResult(b []byte, v *RemoveScannerConfigsRemoveScannerConfigsMutationResult) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "OperationError":
		*v = new(RemoveScannerConfigsRemoveScannerConfigsOperationError)
		return json.Unmarshal(b, *v)
	case "OperationSuccess":
		*v = new(RemoveScannerConfigsRemoveScannerConfigsOperationSuccess)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MutationResult.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for RemoveScannerConfigsRemoveScannerConfigsMutationResult: "%v"`, tn.TypeName)
	}
}

func __marshalRemoveScannerConfigsRemoveScannerConfigsMutationResult(v *RemoveScannerConfigsRemoveScannerConfigsMutationResult) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *RemoveScannerConfigsRemoveScannerConfigsOperationError:
		typename = "OperationError"

		result := struct {
			TypeName string `json:"__typename"`
			*RemoveScannerConfigsRemoveScannerConfigsOperationError
		}{typename, v}
		return json.Marshal(result)
	case *RemoveScannerConfigsRemoveScannerConfigsOperationSuccess:
		typename = "OperationSuccess"

		result := struct {
			TypeName string `json:"__typename"`
			*RemoveScannerConfigsRemoveScannerConfigsOperationSuccess
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for RemoveScannerConfigsRemoveScannerConfigsMutationResult: "%T"`, v)
	}
}

// RemoveScannerConfigsRemoveScannerConfigsOperationError includes the requested fields of the GraphQL type OperationError.
type RemoveScannerConfigsRemoveScannerConfigsOperationError struct {
	Typename     string `json:"__typename"`
	ErrorMessage string `json:"errorMessage"`
	ErrorType    string `json:"errorType"`
}

// GetTypename returns RemoveScannerConfigsRemoveScannerConfigsOperationError.Typename, and is useful for accessing the field via an interface.
func (v *RemoveScannerConfigsRemoveScannerConfigsOperationError) GetTypename() string {
	return v.Typename
}

// GetErrorMessage returns RemoveScannerConfigsRemoveScannerConfigsOperationError.ErrorMessage, and is useful for accessing the field via an interface.
func (v *RemoveScannerConfigsRemoveScannerConfigsOperationError) GetErrorMessage() string {
	return v.ErrorMessage
}

// GetErrorType returns RemoveScannerConfigsRemoveScannerConfigsOperationError.ErrorType, and is useful for accessing the field via an interface.
func (v *RemoveScannerConfigsRemoveScannerConfigsOperationError) GetErrorType() string {
	return v.ErrorType
}

// RemoveScannerConfigsRemoveScannerConfigsOperationSuccess includes the requested fields of the GraphQL type OperationSuccess.
type RemoveScannerConfigsRemoveScannerConfigsOperationSuccess struct {
	Typename string `json:"__typename"`
}

// GetTypename returns RemoveScannerConfigsRemoveScannerConfigsOperationSuccess.Typename, and is useful for accessing the field via an interface.
func (v *RemoveScannerConfigsRemoveScannerConfigsOperationSuccess) GetTypename() string {
	return v.Typename
}

// RemoveScannerConfigsResponse is returned by RemoveScannerConfigs on success.
type RemoveScannerConfigsResponse struct {
	RemoveScannerConfigs RemoveScannerConfigsRemoveScannerConfigsMutationResult `json:"-"`
}

// GetRemoveScannerConfigs returns RemoveScannerConfigsResponse.RemoveScannerConfigs, and is useful for accessing the field via an interface.
func (v *RemoveScannerConfigsResponse) GetRemoveScannerConfigs() RemoveScannerConfigsRemoveScannerConfigsMutationResult {
	return v.RemoveScannerConfigs
}

func (v *RemoveScannerConfigsResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*RemoveScannerConfigsResponse
		RemoveScannerConfigs json.RawMessage `json:"removeScannerConfigs"`
		graphql.NoUnmarshalJSON
	}
	firstPass.RemoveScannerConfigsResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.RemoveScannerConfigs
		src := firstPass.RemoveScannerConfigs
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalRemoveScannerConfigsRemoveScannerConfigsMutationResult(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal RemoveScannerConfigsResponse.RemoveScannerConfigs: %w", err)
			}
		}
	}
	return nil
}

type __premarshalRemoveScannerConfigsResponse struct {
	RemoveScannerConfigs json.RawMessage `json:"removeScannerConfigs"`
}

func (v *RemoveScannerConfigsResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *RemoveScannerConfigsResponse) __premarshalJSON() (*__premarshalRemoveScannerConfigsResponse, error) {
	var retval __premarshalRemoveScannerConfigsResponse

	{

		dst := &retval.RemoveScannerConfigs
		src := v.RemoveScannerConfigs
		var err error
		*dst, err = __marshalRemoveScannerConfigsRemoveScannerConfigsMutationResult(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal RemoveScannerConfigsResponse.RemoveScannerConfigs: %w", err)
		}
	}
	return &retval, nil
}

type ScannerConfigMappingInput struct {
	Id    string `json:"id"`
	Value string `json:"value"`
}

// GetId returns ScannerConfigMappingInput.Id, and is useful for accessing the field via an interface.
func (v *ScannerConfigMappingInput) GetId() string { return v.Id }

// GetValue returns ScannerConfigMappingInput.Value, and is useful for accessing the field via an interface.
func (v *ScannerConfigMappingInput) GetValue() string { return v.Value }

type ScannerConfigRulesetInput struct {
	Id      uuid.UUID                   `json:"id"`
	Name    string                      `json:"name"`
	Configs []ScannerConfigMappingInput `json:"configs"`
}

// GetId returns ScannerConfigRulesetInput.Id, and is useful for accessing the field via an interface.
func (v *ScannerConfigRulesetInput) GetId() uuid.UUID { return v.Id }

// GetName returns ScannerConfigRulesetInput.Name, and is useful for accessing the field via an interface.
func (v *ScannerConfigRulesetInput) GetName() string { return v.Name }

// GetConfigs returns ScannerConfigRulesetInput.Configs, and is useful for accessing the field via an interface.
func (v *ScannerConfigRulesetInput) GetConfigs() []ScannerConfigMappingInput { return v.Configs }

type ScannerConfigUpdate struct {
	Id            string                      `json:"id"`
	GlobalConfigs []ScannerConfigMappingInput `json:"globalConfigs"`
	Rulesets      []ScannerConfigRulesetInput `json:"rulesets"`
}

// GetId returns ScannerConfigUpdate.Id, and is useful for accessing the field via an interface.
func (v *ScannerConfigUpdate) GetId() string { return v.Id }

// GetGlobalConfigs returns ScannerConfigUpdate.GlobalConfigs, and is useful for accessing the field via an interface.
func (v *ScannerConfigUpdate) GetGlobalConfigs() []ScannerConfigMappingInput { return v.GlobalConfigs }

// GetRulesets returns ScannerConfigUpdate.Rulesets, and is useful for accessing the field via an interface.
func (v *ScannerConfigUpdate) GetRulesets() []ScannerConfigRulesetInput { return v.Rulesets }

// ScannerConfigsResponse is returned by ScannerConfigs on success.
type ScannerConfigsResponse struct {
	ScannerConfigs ScannerConfigsScannerConfigs `json:"scannerConfigs"`
}

// GetScannerConfigs returns ScannerConfigsResponse.ScannerConfigs, and is useful for accessing the field via an interface.
func (v *ScannerConfigsResponse) GetScannerConfigs() ScannerConfigsScannerConfigs {
	return v.ScannerConfigs
}

// ScannerConfigsScannerConfigs includes the requested fields of the GraphQL type ScannerConfigs.
type ScannerConfigsScannerConfigs struct {
	Configs []ScannerConfigsScannerConfigsConfigsScannerConfig `json:"configs"`
}

// GetConfigs returns ScannerConfigsScannerConfigs.Configs, and is useful for accessing the field via an interface.
func (v *ScannerConfigsScannerConfigs) GetConfigs() []ScannerConfigsScannerConfigsConfigsScannerConfig {
	return v.Configs
}

// ScannerConfigsScannerConfigsConfigsScannerConfig includes the requested fields of the GraphQL type ScannerConfig.
type ScannerConfigsScannerConfigsConfigsScannerConfig struct {
	scannerConfigData `json:"-"`
}

// GetId returns ScannerConfigsScannerConfigsConfigsScannerConfig.Id, and is useful for accessing the field via an interface.
func (v *ScannerConfigsScannerConfigsConfigsScannerConfig) GetId() string {
	return v.scannerConfigData.Id
}

// GetInUse returns ScannerConfigsScannerConfigsConfigsScannerConfig.InUse, and is useful for accessing the field via an interface.
func (v *ScannerConfigsScannerConfigsConfigsScannerConfig) GetInUse() bool {
	return v.scannerConfigData.InUse
}

// GetGlobalConfigs returns ScannerConfigsScannerConfigsConfigsScannerConfig.GlobalConfigs, and is useful for accessing the field via an interface.
func (v *ScannerConfigsScannerConfigsConfigsScannerConfig) GetGlobalConfigs() []scannerConfigDataGlobalConfigsScannerConfigMapping {
	return v.scannerConfigData.GlobalConfigs
}

// GetRulesets returns ScannerConfigsScannerConfigsConfigsScannerConfig.Rulesets, and is useful for accessing the field via an interface.
func (v *ScannerConfigsScannerConfigsConfigsScannerConfig) GetRulesets() []scannerConfigDataRulesetsScannerConfigRuleset {
	return v.scannerConfigData.Rulesets
}

func (v *ScannerConfigsScannerConfigsConfigsScannerConfig) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*ScannerConfigsScannerConfigsConfigsScannerConfig
		graphql.NoUnmarshalJSON
	}
	firstPass.ScannerConfigsScannerConfigsConfigsScannerConfig = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.scannerConfigData)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalScannerConfigsScannerConfigsConfigsScannerConfig struct {
	Id string `json:"id"`

	InUse bool `json:"inUse"`

	GlobalConfigs []scannerConfigDataGlobalConfigsScannerConfigMapping `json:"globalConfigs"`

	Rulesets []scannerConfigDataRulesetsScannerConfigRuleset `json:"rulesets"`
}

func (v *ScannerConfigsScannerConfigsConfigsScannerConfig) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *ScannerConfigsScannerConfigsConfigsScannerConfig) __premarshalJSON() (*__premarshalScannerConfigsScannerConfigsConfigsScannerConfig, error) {
	var retval __premarshalScannerConfigsScannerConfigsConfigsScannerConfig

	retval.Id = v.scannerConfigData.Id
	retval.InUse = v.scannerConfigData.InUse
	retval.GlobalConfigs = v.scannerConfigData.GlobalConfigs
	retval.Rulesets = v.scannerConfigData.Rulesets
	return &retval, nil
}

// ScannerData includes the GraphQL fields of HasScanners requested by the fragment ScannerData.
//
// ScannerData is implemented by the following types:
// ScannerDataCollection
// ScannerDataResource
type ScannerData interface {
	implementsGraphQLInterfaceScannerData()
	// GetSecurityCoverage returns the interface-field "securityCoverage" from its implementation.
	GetSecurityCoverage() []ScannerDataSecurityCoverageSecurityCategoryCoverage
	// GetScanners returns the interface-field "scanners" from its implementation.
	GetScanners() []ScannerDataScannersScanner
}

func (v *ScannerDataCollection) implementsGraphQLInterfaceScannerData() {}
func (v *ScannerDataResource) implementsGraphQLInterfaceScannerData()   {}

func __unmarshalScannerData(b []byte, v *ScannerData) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "Collection":
		*v = new(ScannerDataCollection)
		return json.Unmarshal(b, *v)
	case "Resource":
		*v = new(ScannerDataResource)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing HasScanners.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for ScannerData: "%v"`, tn.TypeName)
	}
}

func __marshalScannerData(v *ScannerData) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *ScannerDataCollection:
		typename = "Collection"

		result := struct {
			TypeName string `json:"__typename"`
			*ScannerDataCollection
		}{typename, v}
		return json.Marshal(result)
	case *ScannerDataResource:
		typename = "Resource"

		result := struct {
			TypeName string `json:"__typename"`
			*ScannerDataResource
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for ScannerData: "%T"`, v)
	}
}

// ScannerData includes the GraphQL fields of Collection requested by the fragment ScannerData.
type ScannerDataCollection struct {
	SecurityCoverage []ScannerDataSecurityCoverageSecurityCategoryCoverage `json:"securityCoverage"`
	Scanners         []ScannerDataScannersScanner                          `json:"scanners"`
}

// GetSecurityCoverage returns ScannerDataCollection.SecurityCoverage, and is useful for accessing the field via an interface.
func (v *ScannerDataCollection) GetSecurityCoverage() []ScannerDataSecurityCoverageSecurityCategoryCoverage {
	return v.SecurityCoverage
}

// GetScanners returns ScannerDataCollection.Scanners, and is useful for accessing the field via an interface.
func (v *ScannerDataCollection) GetScanners() []ScannerDataScannersScanner { return v.Scanners }

// ScannerData includes the GraphQL fields of Resource requested by the fragment ScannerData.
type ScannerDataResource struct {
	SecurityCoverage []ScannerDataSecurityCoverageSecurityCategoryCoverage `json:"securityCoverage"`
	Scanners         []ScannerDataScannersScanner                          `json:"scanners"`
}

// GetSecurityCoverage returns ScannerDataResource.SecurityCoverage, and is useful for accessing the field via an interface.
func (v *ScannerDataResource) GetSecurityCoverage() []ScannerDataSecurityCoverageSecurityCategoryCoverage {
	return v.SecurityCoverage
}

// GetScanners returns ScannerDataResource.Scanners, and is useful for accessing the field via an interface.
func (v *ScannerDataResource) GetScanners() []ScannerDataScannersScanner { return v.Scanners }

// ScannerDataScannersScanner includes the requested fields of the GraphQL type Scanner.
type ScannerDataScannersScanner struct {
	ScannerId          string                            `json:"scannerId"`
	Name               string                            `json:"name"`
	Categories         []SecurityCategory                `json:"categories"`
	State              ProvisioningState                 `json:"state"`
	Activity           Activity                          `json:"activity"`
	ProvisioningMethod ProvisioningMethod                `json:"provisioningMethod"`
	Error              ScannerDataScannersScannerError   `json:"error"`
	Ruleset            ScannerDataScannersScannerRuleset `json:"ruleset"`
}

// GetScannerId returns ScannerDataScannersScanner.ScannerId, and is useful for accessing the field via an interface.
func (v *ScannerDataScannersScanner) GetScannerId() string { return v.ScannerId }

// GetName returns ScannerDataScannersScanner.Name, and is useful for accessing the field via an interface.
func (v *ScannerDataScannersScanner) GetName() string { return v.Name }

// GetCategories returns ScannerDataScannersScanner.Categories, and is useful for accessing the field via an interface.
func (v *ScannerDataScannersScanner) GetCategories() []SecurityCategory { return v.Categories }

// GetState returns ScannerDataScannersScanner.State, and is useful for accessing the field via an interface.
func (v *ScannerDataScannersScanner) GetState() ProvisioningState { return v.State }

// GetActivity returns ScannerDataScannersScanner.Activity, and is useful for accessing the field via an interface.
func (v *ScannerDataScannersScanner) GetActivity() Activity { return v.Activity }

// GetProvisioningMethod returns ScannerDataScannersScanner.ProvisioningMethod, and is useful for accessing the field via an interface.
func (v *ScannerDataScannersScanner) GetProvisioningMethod() ProvisioningMethod {
	return v.ProvisioningMethod
}

// GetError returns ScannerDataScannersScanner.Error, and is useful for accessing the field via an interface.
func (v *ScannerDataScannersScanner) GetError() ScannerDataScannersScannerError { return v.Error }

// GetRuleset returns ScannerDataScannersScanner.Ruleset, and is useful for accessing the field via an interface.
func (v *ScannerDataScannersScanner) GetRuleset() ScannerDataScannersScannerRuleset { return v.Ruleset }

// ScannerDataScannersScannerError includes the requested fields of the GraphQL type ScannerError.
type ScannerDataScannersScannerError struct {
	Message string `json:"message"`
}

// GetMessage returns ScannerDataScannersScannerError.Message, and is useful for accessing the field via an interface.
func (v *ScannerDataScannersScannerError) GetMessage() string { return v.Message }

// ScannerDataScannersScannerRuleset includes the requested fields of the GraphQL type ScannerRuleset.
type ScannerDataScannersScannerRuleset struct {
	Id   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

// GetId returns ScannerDataScannersScannerRuleset.Id, and is useful for accessing the field via an interface.
func (v *ScannerDataScannersScannerRuleset) GetId() uuid.UUID { return v.Id }

// GetName returns ScannerDataScannersScannerRuleset.Name, and is useful for accessing the field via an interface.
func (v *ScannerDataScannersScannerRuleset) GetName() string { return v.Name }

// ScannerDataSecurityCoverageSecurityCategoryCoverage includes the requested fields of the GraphQL type SecurityCategoryCoverage.
type ScannerDataSecurityCoverageSecurityCategoryCoverage struct {
	Category SecurityCategory  `json:"category"`
	State    ProvisioningState `json:"state"`
	Activity Activity          `json:"activity"`
}

// GetCategory returns ScannerDataSecurityCoverageSecurityCategoryCoverage.Category, and is useful for accessing the field via an interface.
func (v *ScannerDataSecurityCoverageSecurityCategoryCoverage) GetCategory() SecurityCategory {
	return v.Category
}

// GetState returns ScannerDataSecurityCoverageSecurityCategoryCoverage.State, and is useful for accessing the field via an interface.
func (v *ScannerDataSecurityCoverageSecurityCategoryCoverage) GetState() ProvisioningState {
	return v.State
}

// GetActivity returns ScannerDataSecurityCoverageSecurityCategoryCoverage.Activity, and is useful for accessing the field via an interface.
func (v *ScannerDataSecurityCoverageSecurityCategoryCoverage) GetActivity() Activity {
	return v.Activity
}

type ScannerOperation struct {
	Action    OperationAction `json:"action"`
	ScannerId string          `json:"scannerId"`
}

// GetAction returns ScannerOperation.Action, and is useful for accessing the field via an interface.
func (v *ScannerOperation) GetAction() OperationAction { return v.Action }

// GetScannerId returns ScannerOperation.ScannerId, and is useful for accessing the field via an interface.
func (v *ScannerOperation) GetScannerId() string { return v.ScannerId }

type SecurityCategory string

const (
	SecurityCategoryCicd    SecurityCategory = "CICD"
	SecurityCategoryIac     SecurityCategory = "IAC"
	SecurityCategorySast    SecurityCategory = "SAST"
	SecurityCategorySbom    SecurityCategory = "SBOM"
	SecurityCategorySca     SecurityCategory = "SCA"
	SecurityCategorySci     SecurityCategory = "SCI"
	SecurityCategorySecrets SecurityCategory = "SECRETS"
	SecurityCategoryLicense SecurityCategory = "LICENSE"
)

// SecurityPostureOnlyAccountResponse is returned by SecurityPostureOnlyAccount on success.
type SecurityPostureOnlyAccountResponse struct {
	SecurityPosture SecurityPostureOnlyAccountSecurityPosture `json:"securityPosture"`
}

// GetSecurityPosture returns SecurityPostureOnlyAccountResponse.SecurityPosture, and is useful for accessing the field via an interface.
func (v *SecurityPostureOnlyAccountResponse) GetSecurityPosture() SecurityPostureOnlyAccountSecurityPosture {
	return v.SecurityPosture
}

// SecurityPostureOnlyAccountSecurityPosture includes the requested fields of the GraphQL type SecurityPosture.
type SecurityPostureOnlyAccountSecurityPosture struct {
	Account SecurityPostureOnlyAccountSecurityPostureAccount `json:"account"`
}

// GetAccount returns SecurityPostureOnlyAccountSecurityPosture.Account, and is useful for accessing the field via an interface.
func (v *SecurityPostureOnlyAccountSecurityPosture) GetAccount() SecurityPostureOnlyAccountSecurityPostureAccount {
	return v.Account
}

// SecurityPostureOnlyAccountSecurityPostureAccount includes the requested fields of the GraphQL type Account.
type SecurityPostureOnlyAccountSecurityPostureAccount struct {
	PolicyDataAccount `json:"-"`
	AssetType         AssetType `json:"assetType"`
}

// GetAssetType returns SecurityPostureOnlyAccountSecurityPostureAccount.AssetType, and is useful for accessing the field via an interface.
func (v *SecurityPostureOnlyAccountSecurityPostureAccount) GetAssetType() AssetType {
	return v.AssetType
}

// GetPolicy returns SecurityPostureOnlyAccountSecurityPostureAccount.Policy, and is useful for accessing the field via an interface.
func (v *SecurityPostureOnlyAccountSecurityPostureAccount) GetPolicy() PolicyDataPolicy {
	return v.PolicyDataAccount.Policy
}

func (v *SecurityPostureOnlyAccountSecurityPostureAccount) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SecurityPostureOnlyAccountSecurityPostureAccount
		graphql.NoUnmarshalJSON
	}
	firstPass.SecurityPostureOnlyAccountSecurityPostureAccount = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.PolicyDataAccount)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalSecurityPostureOnlyAccountSecurityPostureAccount struct {
	AssetType AssetType `json:"assetType"`

	Policy PolicyDataPolicy `json:"policy"`
}

func (v *SecurityPostureOnlyAccountSecurityPostureAccount) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SecurityPostureOnlyAccountSecurityPostureAccount) __premarshalJSON() (*__premarshalSecurityPostureOnlyAccountSecurityPostureAccount, error) {
	var retval __premarshalSecurityPostureOnlyAccountSecurityPostureAccount

	retval.AssetType = v.AssetType
	retval.Policy = v.PolicyDataAccount.Policy
	return &retval, nil
}

// SecurityPostureResponse is returned by SecurityPosture on success.
type SecurityPostureResponse struct {
	SecurityPosture SecurityPostureSecurityPosture `json:"securityPosture"`
}

// GetSecurityPosture returns SecurityPostureResponse.SecurityPosture, and is useful for accessing the field via an interface.
func (v *SecurityPostureResponse) GetSecurityPosture() SecurityPostureSecurityPosture {
	return v.SecurityPosture
}

// SecurityPostureSecurityPosture includes the requested fields of the GraphQL type SecurityPosture.
type SecurityPostureSecurityPosture struct {
	Filters   SecurityPostureSecurityPostureFiltersAvailableFilters      `json:"filters"`
	Account   SecurityPostureSecurityPostureAccount                      `json:"account"`
	Providers SecurityPostureSecurityPostureProvidersProvidersConnection `json:"providers"`
}

// GetFilters returns SecurityPostureSecurityPosture.Filters, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPosture) GetFilters() SecurityPostureSecurityPostureFiltersAvailableFilters {
	return v.Filters
}

// GetAccount returns SecurityPostureSecurityPosture.Account, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPosture) GetAccount() SecurityPostureSecurityPostureAccount {
	return v.Account
}

// GetProviders returns SecurityPostureSecurityPosture.Providers, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPosture) GetProviders() SecurityPostureSecurityPostureProvidersProvidersConnection {
	return v.Providers
}

// SecurityPostureSecurityPostureAccount includes the requested fields of the GraphQL type Account.
type SecurityPostureSecurityPostureAccount struct {
	PolicyDataAccount `json:"-"`
	AssetType         AssetType `json:"assetType"`
}

// GetAssetType returns SecurityPostureSecurityPostureAccount.AssetType, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureAccount) GetAssetType() AssetType { return v.AssetType }

// GetPolicy returns SecurityPostureSecurityPostureAccount.Policy, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureAccount) GetPolicy() PolicyDataPolicy {
	return v.PolicyDataAccount.Policy
}

func (v *SecurityPostureSecurityPostureAccount) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SecurityPostureSecurityPostureAccount
		graphql.NoUnmarshalJSON
	}
	firstPass.SecurityPostureSecurityPostureAccount = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.PolicyDataAccount)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalSecurityPostureSecurityPostureAccount struct {
	AssetType AssetType `json:"assetType"`

	Policy PolicyDataPolicy `json:"policy"`
}

func (v *SecurityPostureSecurityPostureAccount) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SecurityPostureSecurityPostureAccount) __premarshalJSON() (*__premarshalSecurityPostureSecurityPostureAccount, error) {
	var retval __premarshalSecurityPostureSecurityPostureAccount

	retval.AssetType = v.AssetType
	retval.Policy = v.PolicyDataAccount.Policy
	return &retval, nil
}

// SecurityPostureSecurityPostureFiltersAvailableFilters includes the requested fields of the GraphQL type AvailableFilters.
type SecurityPostureSecurityPostureFiltersAvailableFilters struct {
	ResourceProvisioningStatus []SecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount              `json:"resourceProvisioningStatus"`
	Collection                 []SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay `json:"collection"`
	MissingCoverage            []SecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount                         `json:"missingCoverage"`
	ResourceAttribute          []SecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount                       `json:"resourceAttribute"`
	PolicyType                 []SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount                              `json:"policyType"`
	Policy                     []SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay         `json:"policy"`
	ProvisionedAnalyzer        []SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount       `json:"provisionedAnalyzer"`
}

// GetResourceProvisioningStatus returns SecurityPostureSecurityPostureFiltersAvailableFilters.ResourceProvisioningStatus, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFilters) GetResourceProvisioningStatus() []SecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount {
	return v.ResourceProvisioningStatus
}

// GetCollection returns SecurityPostureSecurityPostureFiltersAvailableFilters.Collection, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFilters) GetCollection() []SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay {
	return v.Collection
}

// GetMissingCoverage returns SecurityPostureSecurityPostureFiltersAvailableFilters.MissingCoverage, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFilters) GetMissingCoverage() []SecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount {
	return v.MissingCoverage
}

// GetResourceAttribute returns SecurityPostureSecurityPostureFiltersAvailableFilters.ResourceAttribute, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFilters) GetResourceAttribute() []SecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount {
	return v.ResourceAttribute
}

// GetPolicyType returns SecurityPostureSecurityPostureFiltersAvailableFilters.PolicyType, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFilters) GetPolicyType() []SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount {
	return v.PolicyType
}

// GetPolicy returns SecurityPostureSecurityPostureFiltersAvailableFilters.Policy, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFilters) GetPolicy() []SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay {
	return v.Policy
}

// GetProvisionedAnalyzer returns SecurityPostureSecurityPostureFiltersAvailableFilters.ProvisionedAnalyzer, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFilters) GetProvisionedAnalyzer() []SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount {
	return v.ProvisionedAnalyzer
}

// SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay includes the requested fields of the GraphQL type CollectionFilterDisplayFilterCountWithDisplay.
type SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay struct {
	FilterDataCollectionFilterDisplayFilterCountWithDisplay `json:"-"`
	Display                                                 SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay `json:"display"`
}

// GetDisplay returns SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay.Display, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay) GetDisplay() SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay {
	return v.Display
}

// GetValue returns SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay.Value, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay) GetValue() string {
	return v.FilterDataCollectionFilterDisplayFilterCountWithDisplay.Value
}

// GetCount returns SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay.Count, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay) GetCount() int {
	return v.FilterDataCollectionFilterDisplayFilterCountWithDisplay.Count
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay
		graphql.NoUnmarshalJSON
	}
	firstPass.SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataCollectionFilterDisplayFilterCountWithDisplay)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay struct {
	Display SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay `json:"display"`

	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay) __premarshalJSON() (*__premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay, error) {
	var retval __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplay

	retval.Display = v.Display
	retval.Value = v.FilterDataCollectionFilterDisplayFilterCountWithDisplay.Value
	retval.Count = v.FilterDataCollectionFilterDisplayFilterCountWithDisplay.Count
	return &retval, nil
}

// SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay includes the requested fields of the GraphQL type CollectionFilterDisplay.
type SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay struct {
	Name     string `json:"name"`
	Provider string `json:"provider"`
}

// GetName returns SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay.Name, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay) GetName() string {
	return v.Name
}

// GetProvider returns SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay.Provider, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersCollectionCollectionFilterDisplayFilterCountWithDisplayDisplayCollectionFilterDisplay) GetProvider() string {
	return v.Provider
}

// SecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount includes the requested fields of the GraphQL type BasicFilterCount.
type SecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount struct {
	FilterDataBasicFilterCount `json:"-"`
}

// GetValue returns SecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount.Value, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount) GetValue() string {
	return v.FilterDataBasicFilterCount.Value
}

// GetCount returns SecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount.Count, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount) GetCount() int {
	return v.FilterDataBasicFilterCount.Count
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount
		graphql.NoUnmarshalJSON
	}
	firstPass.SecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataBasicFilterCount)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount struct {
	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount) __premarshalJSON() (*__premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount, error) {
	var retval __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersMissingCoverageBasicFilterCount

	retval.Value = v.FilterDataBasicFilterCount.Value
	retval.Count = v.FilterDataBasicFilterCount.Count
	return &retval, nil
}

// SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay includes the requested fields of the GraphQL type PolicyFilterDisplayFilterCountWithDisplay.
type SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay struct {
	FilterDataPolicyFilterDisplayFilterCountWithDisplay `json:"-"`
	Display                                             SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay `json:"display"`
}

// GetDisplay returns SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay.Display, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay) GetDisplay() SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay {
	return v.Display
}

// GetValue returns SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay.Value, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay) GetValue() string {
	return v.FilterDataPolicyFilterDisplayFilterCountWithDisplay.Value
}

// GetCount returns SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay.Count, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay) GetCount() int {
	return v.FilterDataPolicyFilterDisplayFilterCountWithDisplay.Count
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay
		graphql.NoUnmarshalJSON
	}
	firstPass.SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataPolicyFilterDisplayFilterCountWithDisplay)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay struct {
	Display SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay `json:"display"`

	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay) __premarshalJSON() (*__premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay, error) {
	var retval __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplay

	retval.Display = v.Display
	retval.Value = v.FilterDataPolicyFilterDisplayFilterCountWithDisplay.Value
	retval.Count = v.FilterDataPolicyFilterDisplayFilterCountWithDisplay.Count
	return &retval, nil
}

// SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay includes the requested fields of the GraphQL type PolicyFilterDisplay.
type SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay struct {
	Name string `json:"name"`
}

// GetName returns SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay.Name, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyPolicyFilterDisplayFilterCountWithDisplayDisplayPolicyFilterDisplay) GetName() string {
	return v.Name
}

// SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount includes the requested fields of the GraphQL type BasicFilterCount.
type SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount struct {
	FilterDataBasicFilterCount `json:"-"`
}

// GetValue returns SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount.Value, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount) GetValue() string {
	return v.FilterDataBasicFilterCount.Value
}

// GetCount returns SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount.Count, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount) GetCount() int {
	return v.FilterDataBasicFilterCount.Count
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount
		graphql.NoUnmarshalJSON
	}
	firstPass.SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataBasicFilterCount)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount struct {
	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount) __premarshalJSON() (*__premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount, error) {
	var retval __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersPolicyTypeBasicFilterCount

	retval.Value = v.FilterDataBasicFilterCount.Value
	retval.Count = v.FilterDataBasicFilterCount.Count
	return &retval, nil
}

// SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount includes the requested fields of the GraphQL type ProvisionedAnalyzerFilterCount.
type SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount struct {
	FilterDataProvisionedAnalyzerFilterCount `json:"-"`
	Display                                  SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay `json:"display"`
}

// GetDisplay returns SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount.Display, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount) GetDisplay() SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay {
	return v.Display
}

// GetValue returns SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount.Value, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount) GetValue() string {
	return v.FilterDataProvisionedAnalyzerFilterCount.Value
}

// GetCount returns SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount.Count, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount) GetCount() int {
	return v.FilterDataProvisionedAnalyzerFilterCount.Count
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount
		graphql.NoUnmarshalJSON
	}
	firstPass.SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataProvisionedAnalyzerFilterCount)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount struct {
	Display SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay `json:"display"`

	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount) __premarshalJSON() (*__premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount, error) {
	var retval __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCount

	retval.Display = v.Display
	retval.Value = v.FilterDataProvisionedAnalyzerFilterCount.Value
	retval.Count = v.FilterDataProvisionedAnalyzerFilterCount.Count
	return &retval, nil
}

// SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay includes the requested fields of the GraphQL type ProvisionedAnalyzerFilterDisplay.
type SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay struct {
	AnalyzerId   string `json:"analyzerId"`
	AnalyzerName string `json:"analyzerName"`
	RulesetName  string `json:"rulesetName"`
}

// GetAnalyzerId returns SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay.AnalyzerId, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay) GetAnalyzerId() string {
	return v.AnalyzerId
}

// GetAnalyzerName returns SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay.AnalyzerName, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay) GetAnalyzerName() string {
	return v.AnalyzerName
}

// GetRulesetName returns SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay.RulesetName, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersProvisionedAnalyzerProvisionedAnalyzerFilterCountDisplayProvisionedAnalyzerFilterDisplay) GetRulesetName() string {
	return v.RulesetName
}

// SecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount includes the requested fields of the GraphQL type BasicFilterCount.
type SecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount struct {
	FilterDataBasicFilterCount `json:"-"`
}

// GetValue returns SecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount.Value, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount) GetValue() string {
	return v.FilterDataBasicFilterCount.Value
}

// GetCount returns SecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount.Count, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount) GetCount() int {
	return v.FilterDataBasicFilterCount.Count
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount
		graphql.NoUnmarshalJSON
	}
	firstPass.SecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataBasicFilterCount)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount struct {
	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount) __premarshalJSON() (*__premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount, error) {
	var retval __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersResourceAttributeBasicFilterCount

	retval.Value = v.FilterDataBasicFilterCount.Value
	retval.Count = v.FilterDataBasicFilterCount.Count
	return &retval, nil
}

// SecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount includes the requested fields of the GraphQL type BasicFilterCount.
type SecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount struct {
	FilterDataBasicFilterCount `json:"-"`
}

// GetValue returns SecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount.Value, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount) GetValue() string {
	return v.FilterDataBasicFilterCount.Value
}

// GetCount returns SecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount.Count, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount) GetCount() int {
	return v.FilterDataBasicFilterCount.Count
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount
		graphql.NoUnmarshalJSON
	}
	firstPass.SecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.FilterDataBasicFilterCount)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount struct {
	Value string `json:"value"`

	Count int `json:"count"`
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount) __premarshalJSON() (*__premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount, error) {
	var retval __premarshalSecurityPostureSecurityPostureFiltersAvailableFiltersResourceProvisioningStatusBasicFilterCount

	retval.Value = v.FilterDataBasicFilterCount.Value
	retval.Count = v.FilterDataBasicFilterCount.Count
	return &retval, nil
}

// SecurityPostureSecurityPostureProvidersProvidersConnection includes the requested fields of the GraphQL type ProvidersConnection.
type SecurityPostureSecurityPostureProvidersProvidersConnection struct {
	ConnectionDataProvidersConnection `json:"-"`
	Edges                             []SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge `json:"edges"`
}

// GetEdges returns SecurityPostureSecurityPostureProvidersProvidersConnection.Edges, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnection) GetEdges() []SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge {
	return v.Edges
}

// GetTotalCount returns SecurityPostureSecurityPostureProvidersProvidersConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnection) GetTotalCount() int {
	return v.ConnectionDataProvidersConnection.TotalCount
}

// GetPageInfo returns SecurityPostureSecurityPostureProvidersProvidersConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnection) GetPageInfo() ConnectionDataPageInfo {
	return v.ConnectionDataProvidersConnection.PageInfo
}

func (v *SecurityPostureSecurityPostureProvidersProvidersConnection) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SecurityPostureSecurityPostureProvidersProvidersConnection
		graphql.NoUnmarshalJSON
	}
	firstPass.SecurityPostureSecurityPostureProvidersProvidersConnection = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ConnectionDataProvidersConnection)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalSecurityPostureSecurityPostureProvidersProvidersConnection struct {
	Edges []SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge `json:"edges"`

	TotalCount int `json:"totalCount"`

	PageInfo ConnectionDataPageInfo `json:"pageInfo"`
}

func (v *SecurityPostureSecurityPostureProvidersProvidersConnection) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SecurityPostureSecurityPostureProvidersProvidersConnection) __premarshalJSON() (*__premarshalSecurityPostureSecurityPostureProvidersProvidersConnection, error) {
	var retval __premarshalSecurityPostureSecurityPostureProvidersProvidersConnection

	retval.Edges = v.Edges
	retval.TotalCount = v.ConnectionDataProvidersConnection.TotalCount
	retval.PageInfo = v.ConnectionDataProvidersConnection.PageInfo
	return &retval, nil
}

// SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge includes the requested fields of the GraphQL type ProviderEdge.
type SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge struct {
	Cursor string                                                                                  `json:"cursor"`
	Node   SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider `json:"node"`
}

// GetCursor returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge.Cursor, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge) GetCursor() string {
	return v.Cursor
}

// GetNode returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge.Node, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdge) GetNode() SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider {
	return v.Node
}

// SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider includes the requested fields of the GraphQL type Provider.
type SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider struct {
	ProviderId     string                                                                                                                  `json:"providerId"`
	Name           string                                                                                                                  `json:"name"`
	Stats          SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats                            `json:"stats"`
	Collections    SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection `json:"collections"`
	AutoAssignment []SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderAutoAssignment                 `json:"autoAssignment"`
}

// GetProviderId returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider.ProviderId, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider) GetProviderId() string {
	return v.ProviderId
}

// GetName returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider.Name, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider) GetName() string {
	return v.Name
}

// GetStats returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider.Stats, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider) GetStats() SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats {
	return v.Stats
}

// GetCollections returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider.Collections, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider) GetCollections() SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection {
	return v.Collections
}

// GetAutoAssignment returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider.AutoAssignment, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProvider) GetAutoAssignment() []SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderAutoAssignment {
	return v.AutoAssignment
}

// SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderAutoAssignment includes the requested fields of the GraphQL type AutoAssignment.
type SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderAutoAssignment struct {
	Id      string `json:"id"`
	Enabled bool   `json:"enabled"`
}

// GetId returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderAutoAssignment.Id, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderAutoAssignment) GetId() string {
	return v.Id
}

// GetEnabled returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderAutoAssignment.Enabled, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderAutoAssignment) GetEnabled() bool {
	return v.Enabled
}

// SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection includes the requested fields of the GraphQL type CollectionsConnection.
type SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection struct {
	ConnectionDataCollectionsConnection `json:"-"`
	Edges                               []SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge `json:"edges"`
}

// GetEdges returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection.Edges, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection) GetEdges() []SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge {
	return v.Edges
}

// GetTotalCount returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection) GetTotalCount() int {
	return v.ConnectionDataCollectionsConnection.TotalCount
}

// GetPageInfo returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection.PageInfo, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection) GetPageInfo() ConnectionDataPageInfo {
	return v.ConnectionDataCollectionsConnection.PageInfo
}

func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection
		graphql.NoUnmarshalJSON
	}
	firstPass.SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.ConnectionDataCollectionsConnection)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection struct {
	Edges []SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge `json:"edges"`

	TotalCount int `json:"totalCount"`

	PageInfo ConnectionDataPageInfo `json:"pageInfo"`
}

func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection) __premarshalJSON() (*__premarshalSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection, error) {
	var retval __premarshalSecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnection

	retval.Edges = v.Edges
	retval.TotalCount = v.ConnectionDataCollectionsConnection.TotalCount
	retval.PageInfo = v.ConnectionDataCollectionsConnection.PageInfo
	return &retval, nil
}

// SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge includes the requested fields of the GraphQL type CollectionEdge.
type SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge struct {
	Cursor string                                                                                                                                                   `json:"cursor"`
	Node   SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection `json:"node"`
}

// GetCursor returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge.Cursor, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge) GetCursor() string {
	return v.Cursor
}

// GetNode returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge.Node, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdge) GetNode() SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection {
	return v.Node
}

// SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection includes the requested fields of the GraphQL type Collection.
type SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection struct {
	CollectionId string `json:"collectionId"`
}

// GetCollectionId returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection.CollectionId, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderCollectionsCollectionsConnectionEdgesCollectionEdgeNodeCollection) GetCollectionId() string {
	return v.CollectionId
}

// SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats includes the requested fields of the GraphQL type ProviderStats.
type SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats struct {
	TotalNeedAttention int `json:"totalNeedAttention"`
	TotalResources     int `json:"totalResources"`
}

// GetTotalNeedAttention returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats.TotalNeedAttention, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats) GetTotalNeedAttention() int {
	return v.TotalNeedAttention
}

// GetTotalResources returns SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats.TotalResources, and is useful for accessing the field via an interface.
func (v *SecurityPostureSecurityPostureProvidersProvidersConnectionEdgesProviderEdgeNodeProviderStats) GetTotalResources() int {
	return v.TotalResources
}

type SelectionType string

const (
	SelectionTypeAsset  SelectionType = "ASSET"
	SelectionTypeFilter SelectionType = "FILTER"
)

// SetAccountAutoAssignmentResponse is returned by SetAccountAutoAssignment on success.
type SetAccountAutoAssignmentResponse struct {
	SetAccountAutoAssignment SetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult `json:"-"`
}

// GetSetAccountAutoAssignment returns SetAccountAutoAssignmentResponse.SetAccountAutoAssignment, and is useful for accessing the field via an interface.
func (v *SetAccountAutoAssignmentResponse) GetSetAccountAutoAssignment() SetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult {
	return v.SetAccountAutoAssignment
}

func (v *SetAccountAutoAssignmentResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SetAccountAutoAssignmentResponse
		SetAccountAutoAssignment json.RawMessage `json:"setAccountAutoAssignment"`
		graphql.NoUnmarshalJSON
	}
	firstPass.SetAccountAutoAssignmentResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.SetAccountAutoAssignment
		src := firstPass.SetAccountAutoAssignment
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalSetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal SetAccountAutoAssignmentResponse.SetAccountAutoAssignment: %w", err)
			}
		}
	}
	return nil
}

type __premarshalSetAccountAutoAssignmentResponse struct {
	SetAccountAutoAssignment json.RawMessage `json:"setAccountAutoAssignment"`
}

func (v *SetAccountAutoAssignmentResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SetAccountAutoAssignmentResponse) __premarshalJSON() (*__premarshalSetAccountAutoAssignmentResponse, error) {
	var retval __premarshalSetAccountAutoAssignmentResponse

	{

		dst := &retval.SetAccountAutoAssignment
		src := v.SetAccountAutoAssignment
		var err error
		*dst, err = __marshalSetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal SetAccountAutoAssignmentResponse.SetAccountAutoAssignment: %w", err)
		}
	}
	return &retval, nil
}

// SetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult includes the requested fields of the GraphQL interface MutationResult.
//
// SetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult is implemented by the following types:
// SetAccountAutoAssignmentSetAccountAutoAssignmentOperationError
// SetAccountAutoAssignmentSetAccountAutoAssignmentOperationSuccess
type SetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult interface {
	implementsGraphQLInterfaceSetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *SetAccountAutoAssignmentSetAccountAutoAssignmentOperationError) implementsGraphQLInterfaceSetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult() {
}
func (v *SetAccountAutoAssignmentSetAccountAutoAssignmentOperationSuccess) implementsGraphQLInterfaceSetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult() {
}

func __unmarshalSetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult(b []byte, v *SetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "OperationError":
		*v = new(SetAccountAutoAssignmentSetAccountAutoAssignmentOperationError)
		return json.Unmarshal(b, *v)
	case "OperationSuccess":
		*v = new(SetAccountAutoAssignmentSetAccountAutoAssignmentOperationSuccess)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MutationResult.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for SetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult: "%v"`, tn.TypeName)
	}
}

func __marshalSetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult(v *SetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *SetAccountAutoAssignmentSetAccountAutoAssignmentOperationError:
		typename = "OperationError"

		result := struct {
			TypeName string `json:"__typename"`
			*SetAccountAutoAssignmentSetAccountAutoAssignmentOperationError
		}{typename, v}
		return json.Marshal(result)
	case *SetAccountAutoAssignmentSetAccountAutoAssignmentOperationSuccess:
		typename = "OperationSuccess"

		result := struct {
			TypeName string `json:"__typename"`
			*SetAccountAutoAssignmentSetAccountAutoAssignmentOperationSuccess
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for SetAccountAutoAssignmentSetAccountAutoAssignmentMutationResult: "%T"`, v)
	}
}

// SetAccountAutoAssignmentSetAccountAutoAssignmentOperationError includes the requested fields of the GraphQL type OperationError.
type SetAccountAutoAssignmentSetAccountAutoAssignmentOperationError struct {
	Typename     string `json:"__typename"`
	ErrorMessage string `json:"errorMessage"`
	ErrorType    string `json:"errorType"`
}

// GetTypename returns SetAccountAutoAssignmentSetAccountAutoAssignmentOperationError.Typename, and is useful for accessing the field via an interface.
func (v *SetAccountAutoAssignmentSetAccountAutoAssignmentOperationError) GetTypename() string {
	return v.Typename
}

// GetErrorMessage returns SetAccountAutoAssignmentSetAccountAutoAssignmentOperationError.ErrorMessage, and is useful for accessing the field via an interface.
func (v *SetAccountAutoAssignmentSetAccountAutoAssignmentOperationError) GetErrorMessage() string {
	return v.ErrorMessage
}

// GetErrorType returns SetAccountAutoAssignmentSetAccountAutoAssignmentOperationError.ErrorType, and is useful for accessing the field via an interface.
func (v *SetAccountAutoAssignmentSetAccountAutoAssignmentOperationError) GetErrorType() string {
	return v.ErrorType
}

// SetAccountAutoAssignmentSetAccountAutoAssignmentOperationSuccess includes the requested fields of the GraphQL type OperationSuccess.
type SetAccountAutoAssignmentSetAccountAutoAssignmentOperationSuccess struct {
	Typename string `json:"__typename"`
}

// GetTypename returns SetAccountAutoAssignmentSetAccountAutoAssignmentOperationSuccess.Typename, and is useful for accessing the field via an interface.
func (v *SetAccountAutoAssignmentSetAccountAutoAssignmentOperationSuccess) GetTypename() string {
	return v.Typename
}

// SetAnalyzerAutoAssignmentResponse is returned by SetAnalyzerAutoAssignment on success.
type SetAnalyzerAutoAssignmentResponse struct {
	SetAnalyzerAutoAssignment SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult `json:"-"`
}

// GetSetAnalyzerAutoAssignment returns SetAnalyzerAutoAssignmentResponse.SetAnalyzerAutoAssignment, and is useful for accessing the field via an interface.
func (v *SetAnalyzerAutoAssignmentResponse) GetSetAnalyzerAutoAssignment() SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult {
	return v.SetAnalyzerAutoAssignment
}

func (v *SetAnalyzerAutoAssignmentResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*SetAnalyzerAutoAssignmentResponse
		SetAnalyzerAutoAssignment json.RawMessage `json:"setAnalyzerAutoAssignment"`
		graphql.NoUnmarshalJSON
	}
	firstPass.SetAnalyzerAutoAssignmentResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.SetAnalyzerAutoAssignment
		src := firstPass.SetAnalyzerAutoAssignment
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalSetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal SetAnalyzerAutoAssignmentResponse.SetAnalyzerAutoAssignment: %w", err)
			}
		}
	}
	return nil
}

type __premarshalSetAnalyzerAutoAssignmentResponse struct {
	SetAnalyzerAutoAssignment json.RawMessage `json:"setAnalyzerAutoAssignment"`
}

func (v *SetAnalyzerAutoAssignmentResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *SetAnalyzerAutoAssignmentResponse) __premarshalJSON() (*__premarshalSetAnalyzerAutoAssignmentResponse, error) {
	var retval __premarshalSetAnalyzerAutoAssignmentResponse

	{

		dst := &retval.SetAnalyzerAutoAssignment
		src := v.SetAnalyzerAutoAssignment
		var err error
		*dst, err = __marshalSetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal SetAnalyzerAutoAssignmentResponse.SetAnalyzerAutoAssignment: %w", err)
		}
	}
	return &retval, nil
}

// SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignment includes the requested fields of the GraphQL type AutoAssignment.
type SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignment struct {
	Typename string `json:"__typename"`
	Id       string `json:"id"`
	Enabled  bool   `json:"enabled"`
}

// GetTypename returns SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignment.Typename, and is useful for accessing the field via an interface.
func (v *SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignment) GetTypename() string { return v.Typename }

// GetId returns SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignment.Id, and is useful for accessing the field via an interface.
func (v *SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignment) GetId() string { return v.Id }

// GetEnabled returns SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignment.Enabled, and is useful for accessing the field via an interface.
func (v *SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignment) GetEnabled() bool { return v.Enabled }

// SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult includes the requested fields of the GraphQL interface AnalyzerAutoAssignmentResult.
//
// SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult is implemented by the following types:
// SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignment
// SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentOperationError
type SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult interface {
	implementsGraphQLInterfaceSetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignment) implementsGraphQLInterfaceSetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult() {
}
func (v *SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentOperationError) implementsGraphQLInterfaceSetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult() {
}

func __unmarshalSetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult(b []byte, v *SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AutoAssignment":
		*v = new(SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignment)
		return json.Unmarshal(b, *v)
	case "OperationError":
		*v = new(SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentOperationError)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing AnalyzerAutoAssignmentResult.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult: "%v"`, tn.TypeName)
	}
}

func __marshalSetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult(v *SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignment:
		typename = "AutoAssignment"

		result := struct {
			TypeName string `json:"__typename"`
			*SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignment
		}{typename, v}
		return json.Marshal(result)
	case *SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentOperationError:
		typename = "OperationError"

		result := struct {
			TypeName string `json:"__typename"`
			*SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentOperationError
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentAnalyzerAutoAssignmentResult: "%T"`, v)
	}
}

// SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentOperationError includes the requested fields of the GraphQL type OperationError.
type SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentOperationError struct {
	Typename     string `json:"__typename"`
	ErrorMessage string `json:"errorMessage"`
	ErrorType    string `json:"errorType"`
}

// GetTypename returns SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentOperationError.Typename, and is useful for accessing the field via an interface.
func (v *SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentOperationError) GetTypename() string {
	return v.Typename
}

// GetErrorMessage returns SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentOperationError.ErrorMessage, and is useful for accessing the field via an interface.
func (v *SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentOperationError) GetErrorMessage() string {
	return v.ErrorMessage
}

// GetErrorType returns SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentOperationError.ErrorType, and is useful for accessing the field via an interface.
func (v *SetAnalyzerAutoAssignmentSetAnalyzerAutoAssignmentOperationError) GetErrorType() string {
	return v.ErrorType
}

// TriggerScanResponse is returned by TriggerScan on success.
type TriggerScanResponse struct {
	TriggerScan TriggerScanTriggerScanMutationResult `json:"-"`
}

// GetTriggerScan returns TriggerScanResponse.TriggerScan, and is useful for accessing the field via an interface.
func (v *TriggerScanResponse) GetTriggerScan() TriggerScanTriggerScanMutationResult {
	return v.TriggerScan
}

func (v *TriggerScanResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*TriggerScanResponse
		TriggerScan json.RawMessage `json:"triggerScan"`
		graphql.NoUnmarshalJSON
	}
	firstPass.TriggerScanResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.TriggerScan
		src := firstPass.TriggerScan
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalTriggerScanTriggerScanMutationResult(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal TriggerScanResponse.TriggerScan: %w", err)
			}
		}
	}
	return nil
}

type __premarshalTriggerScanResponse struct {
	TriggerScan json.RawMessage `json:"triggerScan"`
}

func (v *TriggerScanResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *TriggerScanResponse) __premarshalJSON() (*__premarshalTriggerScanResponse, error) {
	var retval __premarshalTriggerScanResponse

	{

		dst := &retval.TriggerScan
		src := v.TriggerScan
		var err error
		*dst, err = __marshalTriggerScanTriggerScanMutationResult(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal TriggerScanResponse.TriggerScan: %w", err)
		}
	}
	return &retval, nil
}

// TriggerScanTriggerScanMutationResult includes the requested fields of the GraphQL interface MutationResult.
//
// TriggerScanTriggerScanMutationResult is implemented by the following types:
// TriggerScanTriggerScanOperationError
// TriggerScanTriggerScanOperationSuccess
type TriggerScanTriggerScanMutationResult interface {
	implementsGraphQLInterfaceTriggerScanTriggerScanMutationResult()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *TriggerScanTriggerScanOperationError) implementsGraphQLInterfaceTriggerScanTriggerScanMutationResult() {
}
func (v *TriggerScanTriggerScanOperationSuccess) implementsGraphQLInterfaceTriggerScanTriggerScanMutationResult() {
}

func __unmarshalTriggerScanTriggerScanMutationResult(b []byte, v *TriggerScanTriggerScanMutationResult) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "OperationError":
		*v = new(TriggerScanTriggerScanOperationError)
		return json.Unmarshal(b, *v)
	case "OperationSuccess":
		*v = new(TriggerScanTriggerScanOperationSuccess)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MutationResult.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for TriggerScanTriggerScanMutationResult: "%v"`, tn.TypeName)
	}
}

func __marshalTriggerScanTriggerScanMutationResult(v *TriggerScanTriggerScanMutationResult) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *TriggerScanTriggerScanOperationError:
		typename = "OperationError"

		result := struct {
			TypeName string `json:"__typename"`
			*TriggerScanTriggerScanOperationError
		}{typename, v}
		return json.Marshal(result)
	case *TriggerScanTriggerScanOperationSuccess:
		typename = "OperationSuccess"

		result := struct {
			TypeName string `json:"__typename"`
			*TriggerScanTriggerScanOperationSuccess
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for TriggerScanTriggerScanMutationResult: "%T"`, v)
	}
}

// TriggerScanTriggerScanOperationError includes the requested fields of the GraphQL type OperationError.
type TriggerScanTriggerScanOperationError struct {
	Typename     string `json:"__typename"`
	ErrorMessage string `json:"errorMessage"`
	ErrorType    string `json:"errorType"`
}

// GetTypename returns TriggerScanTriggerScanOperationError.Typename, and is useful for accessing the field via an interface.
func (v *TriggerScanTriggerScanOperationError) GetTypename() string { return v.Typename }

// GetErrorMessage returns TriggerScanTriggerScanOperationError.ErrorMessage, and is useful for accessing the field via an interface.
func (v *TriggerScanTriggerScanOperationError) GetErrorMessage() string { return v.ErrorMessage }

// GetErrorType returns TriggerScanTriggerScanOperationError.ErrorType, and is useful for accessing the field via an interface.
func (v *TriggerScanTriggerScanOperationError) GetErrorType() string { return v.ErrorType }

// TriggerScanTriggerScanOperationSuccess includes the requested fields of the GraphQL type OperationSuccess.
type TriggerScanTriggerScanOperationSuccess struct {
	Typename string `json:"__typename"`
}

// GetTypename returns TriggerScanTriggerScanOperationSuccess.Typename, and is useful for accessing the field via an interface.
func (v *TriggerScanTriggerScanOperationSuccess) GetTypename() string { return v.Typename }

// UpdateScannerConfigsResponse is returned by UpdateScannerConfigs on success.
type UpdateScannerConfigsResponse struct {
	UpdateScannerConfigs UpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult `json:"-"`
}

// GetUpdateScannerConfigs returns UpdateScannerConfigsResponse.UpdateScannerConfigs, and is useful for accessing the field via an interface.
func (v *UpdateScannerConfigsResponse) GetUpdateScannerConfigs() UpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult {
	return v.UpdateScannerConfigs
}

func (v *UpdateScannerConfigsResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateScannerConfigsResponse
		UpdateScannerConfigs json.RawMessage `json:"updateScannerConfigs"`
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateScannerConfigsResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.UpdateScannerConfigs
		src := firstPass.UpdateScannerConfigs
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalUpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal UpdateScannerConfigsResponse.UpdateScannerConfigs: %w", err)
			}
		}
	}
	return nil
}

type __premarshalUpdateScannerConfigsResponse struct {
	UpdateScannerConfigs json.RawMessage `json:"updateScannerConfigs"`
}

func (v *UpdateScannerConfigsResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateScannerConfigsResponse) __premarshalJSON() (*__premarshalUpdateScannerConfigsResponse, error) {
	var retval __premarshalUpdateScannerConfigsResponse

	{

		dst := &retval.UpdateScannerConfigs
		src := v.UpdateScannerConfigs
		var err error
		*dst, err = __marshalUpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal UpdateScannerConfigsResponse.UpdateScannerConfigs: %w", err)
		}
	}
	return &retval, nil
}

// UpdateScannerConfigsUpdateScannerConfigsOperationError includes the requested fields of the GraphQL type OperationError.
type UpdateScannerConfigsUpdateScannerConfigsOperationError struct {
	Typename     string `json:"__typename"`
	ErrorMessage string `json:"errorMessage"`
	ErrorType    string `json:"errorType"`
}

// GetTypename returns UpdateScannerConfigsUpdateScannerConfigsOperationError.Typename, and is useful for accessing the field via an interface.
func (v *UpdateScannerConfigsUpdateScannerConfigsOperationError) GetTypename() string {
	return v.Typename
}

// GetErrorMessage returns UpdateScannerConfigsUpdateScannerConfigsOperationError.ErrorMessage, and is useful for accessing the field via an interface.
func (v *UpdateScannerConfigsUpdateScannerConfigsOperationError) GetErrorMessage() string {
	return v.ErrorMessage
}

// GetErrorType returns UpdateScannerConfigsUpdateScannerConfigsOperationError.ErrorType, and is useful for accessing the field via an interface.
func (v *UpdateScannerConfigsUpdateScannerConfigsOperationError) GetErrorType() string {
	return v.ErrorType
}

// UpdateScannerConfigsUpdateScannerConfigsScannerConfig includes the requested fields of the GraphQL type ScannerConfig.
type UpdateScannerConfigsUpdateScannerConfigsScannerConfig struct {
	Typename          string `json:"__typename"`
	scannerConfigData `json:"-"`
}

// GetTypename returns UpdateScannerConfigsUpdateScannerConfigsScannerConfig.Typename, and is useful for accessing the field via an interface.
func (v *UpdateScannerConfigsUpdateScannerConfigsScannerConfig) GetTypename() string {
	return v.Typename
}

// GetId returns UpdateScannerConfigsUpdateScannerConfigsScannerConfig.Id, and is useful for accessing the field via an interface.
func (v *UpdateScannerConfigsUpdateScannerConfigsScannerConfig) GetId() string {
	return v.scannerConfigData.Id
}

// GetInUse returns UpdateScannerConfigsUpdateScannerConfigsScannerConfig.InUse, and is useful for accessing the field via an interface.
func (v *UpdateScannerConfigsUpdateScannerConfigsScannerConfig) GetInUse() bool {
	return v.scannerConfigData.InUse
}

// GetGlobalConfigs returns UpdateScannerConfigsUpdateScannerConfigsScannerConfig.GlobalConfigs, and is useful for accessing the field via an interface.
func (v *UpdateScannerConfigsUpdateScannerConfigsScannerConfig) GetGlobalConfigs() []scannerConfigDataGlobalConfigsScannerConfigMapping {
	return v.scannerConfigData.GlobalConfigs
}

// GetRulesets returns UpdateScannerConfigsUpdateScannerConfigsScannerConfig.Rulesets, and is useful for accessing the field via an interface.
func (v *UpdateScannerConfigsUpdateScannerConfigsScannerConfig) GetRulesets() []scannerConfigDataRulesetsScannerConfigRuleset {
	return v.scannerConfigData.Rulesets
}

func (v *UpdateScannerConfigsUpdateScannerConfigsScannerConfig) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*UpdateScannerConfigsUpdateScannerConfigsScannerConfig
		graphql.NoUnmarshalJSON
	}
	firstPass.UpdateScannerConfigsUpdateScannerConfigsScannerConfig = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	err = json.Unmarshal(
		b, &v.scannerConfigData)
	if err != nil {
		return err
	}
	return nil
}

type __premarshalUpdateScannerConfigsUpdateScannerConfigsScannerConfig struct {
	Typename string `json:"__typename"`

	Id string `json:"id"`

	InUse bool `json:"inUse"`

	GlobalConfigs []scannerConfigDataGlobalConfigsScannerConfigMapping `json:"globalConfigs"`

	Rulesets []scannerConfigDataRulesetsScannerConfigRuleset `json:"rulesets"`
}

func (v *UpdateScannerConfigsUpdateScannerConfigsScannerConfig) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *UpdateScannerConfigsUpdateScannerConfigsScannerConfig) __premarshalJSON() (*__premarshalUpdateScannerConfigsUpdateScannerConfigsScannerConfig, error) {
	var retval __premarshalUpdateScannerConfigsUpdateScannerConfigsScannerConfig

	retval.Typename = v.Typename
	retval.Id = v.scannerConfigData.Id
	retval.InUse = v.scannerConfigData.InUse
	retval.GlobalConfigs = v.scannerConfigData.GlobalConfigs
	retval.Rulesets = v.scannerConfigData.Rulesets
	return &retval, nil
}

// UpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult includes the requested fields of the GraphQL interface UpdateScannerConfigsResult.
//
// UpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult is implemented by the following types:
// UpdateScannerConfigsUpdateScannerConfigsOperationError
// UpdateScannerConfigsUpdateScannerConfigsScannerConfig
type UpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult interface {
	implementsGraphQLInterfaceUpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *UpdateScannerConfigsUpdateScannerConfigsOperationError) implementsGraphQLInterfaceUpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult() {
}
func (v *UpdateScannerConfigsUpdateScannerConfigsScannerConfig) implementsGraphQLInterfaceUpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult() {
}

func __unmarshalUpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult(b []byte, v *UpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "OperationError":
		*v = new(UpdateScannerConfigsUpdateScannerConfigsOperationError)
		return json.Unmarshal(b, *v)
	case "ScannerConfig":
		*v = new(UpdateScannerConfigsUpdateScannerConfigsScannerConfig)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing UpdateScannerConfigsResult.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for UpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult: "%v"`, tn.TypeName)
	}
}

func __marshalUpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult(v *UpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *UpdateScannerConfigsUpdateScannerConfigsOperationError:
		typename = "OperationError"

		result := struct {
			TypeName string `json:"__typename"`
			*UpdateScannerConfigsUpdateScannerConfigsOperationError
		}{typename, v}
		return json.Marshal(result)
	case *UpdateScannerConfigsUpdateScannerConfigsScannerConfig:
		typename = "ScannerConfig"

		premarshaled, err := v.__premarshalJSON()
		if err != nil {
			return nil, err
		}
		result := struct {
			TypeName string `json:"__typename"`
			*__premarshalUpdateScannerConfigsUpdateScannerConfigsScannerConfig
		}{typename, premarshaled}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for UpdateScannerConfigsUpdateScannerConfigsUpdateScannerConfigsResult: "%T"`, v)
	}
}

// __ApplyProvisionPlanInput is used internally by genqlient
type __ApplyProvisionPlanInput struct {
	AssetSelections         []AssetSelection   `json:"assetSelections"`
	Scanners                []ScannerOperation `json:"scanners"`
	Policy                  PolicyOperation    `json:"policy,omitempty"`
	RemoveDeprovisionedData bool               `json:"removeDeprovisionedData"`
}

// GetAssetSelections returns __ApplyProvisionPlanInput.AssetSelections, and is useful for accessing the field via an interface.
func (v *__ApplyProvisionPlanInput) GetAssetSelections() []AssetSelection { return v.AssetSelections }

// GetScanners returns __ApplyProvisionPlanInput.Scanners, and is useful for accessing the field via an interface.
func (v *__ApplyProvisionPlanInput) GetScanners() []ScannerOperation { return v.Scanners }

// GetPolicy returns __ApplyProvisionPlanInput.Policy, and is useful for accessing the field via an interface.
func (v *__ApplyProvisionPlanInput) GetPolicy() PolicyOperation { return v.Policy }

// GetRemoveDeprovisionedData returns __ApplyProvisionPlanInput.RemoveDeprovisionedData, and is useful for accessing the field via an interface.
func (v *__ApplyProvisionPlanInput) GetRemoveDeprovisionedData() bool {
	return v.RemoveDeprovisionedData
}

// __FilteredProviderInput is used internally by genqlient
type __FilteredProviderInput struct {
	ProviderId string  `json:"providerId"`
	Filters    Filters `json:"filters"`
}

// GetProviderId returns __FilteredProviderInput.ProviderId, and is useful for accessing the field via an interface.
func (v *__FilteredProviderInput) GetProviderId() string { return v.ProviderId }

// GetFilters returns __FilteredProviderInput.Filters, and is useful for accessing the field via an interface.
func (v *__FilteredProviderInput) GetFilters() Filters { return v.Filters }

// __FilteredSecurityPostureInput is used internally by genqlient
type __FilteredSecurityPostureInput struct {
	Filters Filters `json:"filters"`
}

// GetFilters returns __FilteredSecurityPostureInput.Filters, and is useful for accessing the field via an interface.
func (v *__FilteredSecurityPostureInput) GetFilters() Filters { return v.Filters }

// __ProviderCollectionInput is used internally by genqlient
type __ProviderCollectionInput struct {
	ProviderId   string `json:"providerId"`
	CollectionId string `json:"collectionId"`
	First        int    `json:"first"`
}

// GetProviderId returns __ProviderCollectionInput.ProviderId, and is useful for accessing the field via an interface.
func (v *__ProviderCollectionInput) GetProviderId() string { return v.ProviderId }

// GetCollectionId returns __ProviderCollectionInput.CollectionId, and is useful for accessing the field via an interface.
func (v *__ProviderCollectionInput) GetCollectionId() string { return v.CollectionId }

// GetFirst returns __ProviderCollectionInput.First, and is useful for accessing the field via an interface.
func (v *__ProviderCollectionInput) GetFirst() int { return v.First }

// __ProviderCollectionsInput is used internally by genqlient
type __ProviderCollectionsInput struct {
	ProviderId string `json:"providerId"`
	First      int    `json:"first"`
}

// GetProviderId returns __ProviderCollectionsInput.ProviderId, and is useful for accessing the field via an interface.
func (v *__ProviderCollectionsInput) GetProviderId() string { return v.ProviderId }

// GetFirst returns __ProviderCollectionsInput.First, and is useful for accessing the field via an interface.
func (v *__ProviderCollectionsInput) GetFirst() int { return v.First }

// __ProviderInput is used internally by genqlient
type __ProviderInput struct {
	ProviderId string `json:"providerId"`
}

// GetProviderId returns __ProviderInput.ProviderId, and is useful for accessing the field via an interface.
func (v *__ProviderInput) GetProviderId() string { return v.ProviderId }

// __ProvisionPlanInput is used internally by genqlient
type __ProvisionPlanInput struct {
	AssetSelections []AssetSelection `json:"assetSelections"`
}

// GetAssetSelections returns __ProvisionPlanInput.AssetSelections, and is useful for accessing the field via an interface.
func (v *__ProvisionPlanInput) GetAssetSelections() []AssetSelection { return v.AssetSelections }

// __RemoveScannerConfigsInput is used internally by genqlient
type __RemoveScannerConfigsInput struct {
	AnalyzerId string `json:"analyzerId"`
}

// GetAnalyzerId returns __RemoveScannerConfigsInput.AnalyzerId, and is useful for accessing the field via an interface.
func (v *__RemoveScannerConfigsInput) GetAnalyzerId() string { return v.AnalyzerId }

// __SetAccountAutoAssignmentInput is used internally by genqlient
type __SetAccountAutoAssignmentInput struct {
	AnalyzerIds []string `json:"analyzerIds"`
}

// GetAnalyzerIds returns __SetAccountAutoAssignmentInput.AnalyzerIds, and is useful for accessing the field via an interface.
func (v *__SetAccountAutoAssignmentInput) GetAnalyzerIds() []string { return v.AnalyzerIds }

// __SetAnalyzerAutoAssignmentInput is used internally by genqlient
type __SetAnalyzerAutoAssignmentInput struct {
	AnalyzerId string `json:"analyzerId"`
	Enabled    bool   `json:"enabled"`
}

// GetAnalyzerId returns __SetAnalyzerAutoAssignmentInput.AnalyzerId, and is useful for accessing the field via an interface.
func (v *__SetAnalyzerAutoAssignmentInput) GetAnalyzerId() string { return v.AnalyzerId }

// GetEnabled returns __SetAnalyzerAutoAssignmentInput.Enabled, and is useful for accessing the field via an interface.
func (v *__SetAnalyzerAutoAssignmentInput) GetEnabled() bool { return v.Enabled }

// __TriggerScanInput is used internally by genqlient
type __TriggerScanInput struct {
	AssetId    string `json:"assetId"`
	AnalyzerId string `json:"analyzerId"`
}

// GetAssetId returns __TriggerScanInput.AssetId, and is useful for accessing the field via an interface.
func (v *__TriggerScanInput) GetAssetId() string { return v.AssetId }

// GetAnalyzerId returns __TriggerScanInput.AnalyzerId, and is useful for accessing the field via an interface.
func (v *__TriggerScanInput) GetAnalyzerId() string { return v.AnalyzerId }

// __UpdateScannerConfigsInput is used internally by genqlient
type __UpdateScannerConfigsInput struct {
	Update ScannerConfigUpdate `json:"update"`
}

// GetUpdate returns __UpdateScannerConfigsInput.Update, and is useful for accessing the field via an interface.
func (v *__UpdateScannerConfigsInput) GetUpdate() ScannerConfigUpdate { return v.Update }

// scannerConfigData includes the GraphQL fields of ScannerConfig requested by the fragment scannerConfigData.
type scannerConfigData struct {
	Id            string                                               `json:"id"`
	InUse         bool                                                 `json:"inUse"`
	GlobalConfigs []scannerConfigDataGlobalConfigsScannerConfigMapping `json:"globalConfigs"`
	Rulesets      []scannerConfigDataRulesetsScannerConfigRuleset      `json:"rulesets"`
}

// GetId returns scannerConfigData.Id, and is useful for accessing the field via an interface.
func (v *scannerConfigData) GetId() string { return v.Id }

// GetInUse returns scannerConfigData.InUse, and is useful for accessing the field via an interface.
func (v *scannerConfigData) GetInUse() bool { return v.InUse }

// GetGlobalConfigs returns scannerConfigData.GlobalConfigs, and is useful for accessing the field via an interface.
func (v *scannerConfigData) GetGlobalConfigs() []scannerConfigDataGlobalConfigsScannerConfigMapping {
	return v.GlobalConfigs
}

// GetRulesets returns scannerConfigData.Rulesets, and is useful for accessing the field via an interface.
func (v *scannerConfigData) GetRulesets() []scannerConfigDataRulesetsScannerConfigRuleset {
	return v.Rulesets
}

// scannerConfigDataGlobalConfigsScannerConfigMapping includes the requested fields of the GraphQL type ScannerConfigMapping.
type scannerConfigDataGlobalConfigsScannerConfigMapping struct {
	Id    string `json:"id"`
	Value string `json:"value"`
}

// GetId returns scannerConfigDataGlobalConfigsScannerConfigMapping.Id, and is useful for accessing the field via an interface.
func (v *scannerConfigDataGlobalConfigsScannerConfigMapping) GetId() string { return v.Id }

// GetValue returns scannerConfigDataGlobalConfigsScannerConfigMapping.Value, and is useful for accessing the field via an interface.
func (v *scannerConfigDataGlobalConfigsScannerConfigMapping) GetValue() string { return v.Value }

// scannerConfigDataRulesetsScannerConfigRuleset includes the requested fields of the GraphQL type ScannerConfigRuleset.
type scannerConfigDataRulesetsScannerConfigRuleset struct {
	Id      uuid.UUID                                                                  `json:"id"`
	Name    string                                                                     `json:"name"`
	InUse   bool                                                                       `json:"inUse"`
	Configs []scannerConfigDataRulesetsScannerConfigRulesetConfigsScannerConfigMapping `json:"configs"`
}

// GetId returns scannerConfigDataRulesetsScannerConfigRuleset.Id, and is useful for accessing the field via an interface.
func (v *scannerConfigDataRulesetsScannerConfigRuleset) GetId() uuid.UUID { return v.Id }

// GetName returns scannerConfigDataRulesetsScannerConfigRuleset.Name, and is useful for accessing the field via an interface.
func (v *scannerConfigDataRulesetsScannerConfigRuleset) GetName() string { return v.Name }

// GetInUse returns scannerConfigDataRulesetsScannerConfigRuleset.InUse, and is useful for accessing the field via an interface.
func (v *scannerConfigDataRulesetsScannerConfigRuleset) GetInUse() bool { return v.InUse }

// GetConfigs returns scannerConfigDataRulesetsScannerConfigRuleset.Configs, and is useful for accessing the field via an interface.
func (v *scannerConfigDataRulesetsScannerConfigRuleset) GetConfigs() []scannerConfigDataRulesetsScannerConfigRulesetConfigsScannerConfigMapping {
	return v.Configs
}

// scannerConfigDataRulesetsScannerConfigRulesetConfigsScannerConfigMapping includes the requested fields of the GraphQL type ScannerConfigMapping.
type scannerConfigDataRulesetsScannerConfigRulesetConfigsScannerConfigMapping struct {
	Id    string `json:"id"`
	Value string `json:"value"`
}

// GetId returns scannerConfigDataRulesetsScannerConfigRulesetConfigsScannerConfigMapping.Id, and is useful for accessing the field via an interface.
func (v *scannerConfigDataRulesetsScannerConfigRulesetConfigsScannerConfigMapping) GetId() string {
	return v.Id
}

// GetValue returns scannerConfigDataRulesetsScannerConfigRulesetConfigsScannerConfigMapping.Value, and is useful for accessing the field via an interface.
func (v *scannerConfigDataRulesetsScannerConfigRulesetConfigsScannerConfigMapping) GetValue() string {
	return v.Value
}

// The query or mutation executed by AccountAutoAssignment.
const AccountAutoAssignment_Operation = `
query AccountAutoAssignment {
	accountAutoAssignment {
		analyzers {
			id
		}
	}
}
`

func AccountAutoAssignment(
	ctx_ context.Context,
	client_ graphql.Client,
) (*AccountAutoAssignmentResponse, error) {
	req_ := &graphql.Request{
		OpName: "AccountAutoAssignment",
		Query:  AccountAutoAssignment_Operation,
	}
	var err_ error

	var data_ AccountAutoAssignmentResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ApplyProvisionPlan.
const ApplyProvisionPlan_Operation = `
mutation ApplyProvisionPlan ($assetSelections: [AssetSelection!]!, $scanners: [ScannerOperation!], $policy: PolicyOperation, $removeDeprovisionedData: Boolean!) {
	applyProvisionPlan(assetSelections: $assetSelections, scanners: $scanners, policy: $policy, removeDeprovisionedData: $removeDeprovisionedData) {
		__typename
		... on OperationError {
			errorMessage
			errorType
		}
	}
}
`

func ApplyProvisionPlan(
	ctx_ context.Context,
	client_ graphql.Client,
	assetSelections []AssetSelection,
	scanners []ScannerOperation,
	policy PolicyOperation,
	removeDeprovisionedData bool,
) (*ApplyProvisionPlanResponse, error) {
	req_ := &graphql.Request{
		OpName: "ApplyProvisionPlan",
		Query:  ApplyProvisionPlan_Operation,
		Variables: &__ApplyProvisionPlanInput{
			AssetSelections:         assetSelections,
			Scanners:                scanners,
			Policy:                  policy,
			RemoveDeprovisionedData: removeDeprovisionedData,
		},
	}
	var err_ error

	var data_ ApplyProvisionPlanResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ExternalDataValidation.
const ExternalDataValidation_Operation = `
query ExternalDataValidation {
	securityPosture {
		providers {
			edges {
				node {
					providerId
					collections {
						edges {
							node {
								collectionId
								name
								... ScannerData
								... PolicyData
								resources {
									edges {
										node {
											resourceId
											... ScannerData
											... PolicyData
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
fragment ScannerData on HasScanners {
	securityCoverage {
		category
		state
		activity
	}
	scanners {
		scannerId
		name
		categories
		state
		activity
		provisioningMethod
		error {
			message
		}
		ruleset {
			id
			name
		}
	}
}
fragment PolicyData on HasPolicy {
	policy {
		policyId
		name
		source
		assignment
	}
}
`

// Query with precise fields to assert external dependencies
func ExternalDataValidation(
	ctx_ context.Context,
	client_ graphql.Client,
) (*ExternalDataValidationResponse, error) {
	req_ := &graphql.Request{
		OpName: "ExternalDataValidation",
		Query:  ExternalDataValidation_Operation,
	}
	var err_ error

	var data_ ExternalDataValidationResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by FilteredProvider.
const FilteredProvider_Operation = `
query FilteredProvider ($providerId: String!, $filters: Filters) {
	provider(providerId: $providerId, filters: $filters) {
		stats {
			totalResources
		}
		collections {
			edges {
				node {
					collectionId
					resources {
						edges {
							node {
								resourceId
							}
						}
					}
				}
			}
		}
	}
}
`

func FilteredProvider(
	ctx_ context.Context,
	client_ graphql.Client,
	providerId string,
	filters Filters,
) (*FilteredProviderResponse, error) {
	req_ := &graphql.Request{
		OpName: "FilteredProvider",
		Query:  FilteredProvider_Operation,
		Variables: &__FilteredProviderInput{
			ProviderId: providerId,
			Filters:    filters,
		},
	}
	var err_ error

	var data_ FilteredProviderResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by FilteredSecurityPosture.
const FilteredSecurityPosture_Operation = `
query FilteredSecurityPosture ($filters: Filters) {
	securityPosture(filters: $filters) {
		filters {
			resourceProvisioningStatus {
				... FilterData
			}
			collection {
				... FilterData
				display {
					name
					provider
				}
			}
			missingCoverage {
				... FilterData
			}
			resourceAttribute {
				... FilterData
			}
			policyType {
				... FilterData
			}
			policy {
				... FilterData
				display {
					name
				}
			}
			provisionedAnalyzer {
				... FilterData
				display {
					analyzerId
					analyzerName
					rulesetName
				}
			}
		}
		providers {
			edges {
				node {
					providerId
					stats {
						totalResources
					}
					collections {
						edges {
							node {
								collectionId
								resources {
									edges {
										node {
											resourceId
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
fragment FilterData on FilterCount {
	value
	count
}
`

func FilteredSecurityPosture(
	ctx_ context.Context,
	client_ graphql.Client,
	filters Filters,
) (*FilteredSecurityPostureResponse, error) {
	req_ := &graphql.Request{
		OpName: "FilteredSecurityPosture",
		Query:  FilteredSecurityPosture_Operation,
		Variables: &__FilteredSecurityPostureInput{
			Filters: filters,
		},
	}
	var err_ error

	var data_ FilteredSecurityPostureResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by PolicyAssignmentSummary.
const PolicyAssignmentSummary_Operation = `
query PolicyAssignmentSummary {
	policyAssignmentSummary {
		policies {
			id
			totalAccounts
			totalCollections
			totalResources
		}
	}
}
`

func PolicyAssignmentSummary(
	ctx_ context.Context,
	client_ graphql.Client,
) (*PolicyAssignmentSummaryResponse, error) {
	req_ := &graphql.Request{
		OpName: "PolicyAssignmentSummary",
		Query:  PolicyAssignmentSummary_Operation,
	}
	var err_ error

	var data_ PolicyAssignmentSummaryResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Provider.
const Provider_Operation = `
query Provider ($providerId: String!) {
	provider(providerId: $providerId) {
		providerId
		name
		stats {
			totalNeedAttention
			totalResources
		}
		autoAssignment {
			id
			enabled
		}
	}
}
`

func Provider(
	ctx_ context.Context,
	client_ graphql.Client,
	providerId string,
) (*ProviderResponse, error) {
	req_ := &graphql.Request{
		OpName: "Provider",
		Query:  Provider_Operation,
		Variables: &__ProviderInput{
			ProviderId: providerId,
		},
	}
	var err_ error

	var data_ ProviderResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ProviderCollection.
const ProviderCollection_Operation = `
query ProviderCollection ($providerId: String!, $collectionId: String!, $first: Int) {
	provider(providerId: $providerId) {
		collection(collectionId: $collectionId) {
			collectionId
			resources(first: $first) {
				... ConnectionData
				edges {
					cursor
					node {
						resourceId
						assetType
						name
						... PolicyData
						... ScannerData
					}
				}
			}
		}
	}
}
fragment ConnectionData on Connection {
	totalCount
	pageInfo {
		hasNextPage
		hasPreviousPage
		startCursor
		endCursor
	}
}
fragment PolicyData on HasPolicy {
	policy {
		policyId
		name
		source
		assignment
	}
}
fragment ScannerData on HasScanners {
	securityCoverage {
		category
		state
		activity
	}
	scanners {
		scannerId
		name
		categories
		state
		activity
		provisioningMethod
		error {
			message
		}
		ruleset {
			id
			name
		}
	}
}
`

func ProviderCollection(
	ctx_ context.Context,
	client_ graphql.Client,
	providerId string,
	collectionId string,
	first int,
) (*ProviderCollectionResponse, error) {
	req_ := &graphql.Request{
		OpName: "ProviderCollection",
		Query:  ProviderCollection_Operation,
		Variables: &__ProviderCollectionInput{
			ProviderId:   providerId,
			CollectionId: collectionId,
			First:        first,
		},
	}
	var err_ error

	var data_ ProviderCollectionResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ProviderCollections.
const ProviderCollections_Operation = `
query ProviderCollections ($providerId: String!, $first: Int) {
	provider(providerId: $providerId) {
		collections(first: $first) {
			... ConnectionData
			edges {
				cursor
				node {
					collectionId
					assetType
					name
					baseUrl
					webUrl
					stats {
						totalNeedAttention
					}
					... PolicyData
					... ScannerData
					resources {
						... ConnectionData
						edges {
							cursor
							node {
								resourceId
							}
						}
					}
					iconUrl
				}
			}
		}
	}
}
fragment ConnectionData on Connection {
	totalCount
	pageInfo {
		hasNextPage
		hasPreviousPage
		startCursor
		endCursor
	}
}
fragment PolicyData on HasPolicy {
	policy {
		policyId
		name
		source
		assignment
	}
}
fragment ScannerData on HasScanners {
	securityCoverage {
		category
		state
		activity
	}
	scanners {
		scannerId
		name
		categories
		state
		activity
		provisioningMethod
		error {
			message
		}
		ruleset {
			id
			name
		}
	}
}
`

func ProviderCollections(
	ctx_ context.Context,
	client_ graphql.Client,
	providerId string,
	first int,
) (*ProviderCollectionsResponse, error) {
	req_ := &graphql.Request{
		OpName: "ProviderCollections",
		Query:  ProviderCollections_Operation,
		Variables: &__ProviderCollectionsInput{
			ProviderId: providerId,
			First:      first,
		},
	}
	var err_ error

	var data_ ProviderCollectionsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ProvisionPlan.
const ProvisionPlan_Operation = `
query ProvisionPlan ($assetSelections: [AssetSelection!]!) {
	provisionPlan(assetSelections: $assetSelections) {
		totalSelectedCollections
		totalSelectedResources
		scanners {
			scannerId
			scannerName
			categories
			totalApplicableCollections
			totalApplicableResources
			availability
			targets
			rulesetRequired
			rulesets {
				id
				name
			}
		}
	}
}
`

func ProvisionPlan(
	ctx_ context.Context,
	client_ graphql.Client,
	assetSelections []AssetSelection,
) (*ProvisionPlanResponse, error) {
	req_ := &graphql.Request{
		OpName: "ProvisionPlan",
		Query:  ProvisionPlan_Operation,
		Variables: &__ProvisionPlanInput{
			AssetSelections: assetSelections,
		},
	}
	var err_ error

	var data_ ProvisionPlanResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by RemoveScannerConfigs.
const RemoveScannerConfigs_Operation = `
mutation RemoveScannerConfigs ($analyzerId: String!) {
	removeScannerConfigs(analyzerId: $analyzerId) {
		__typename
		... on OperationError {
			errorMessage
			errorType
		}
	}
}
`

func RemoveScannerConfigs(
	ctx_ context.Context,
	client_ graphql.Client,
	analyzerId string,
) (*RemoveScannerConfigsResponse, error) {
	req_ := &graphql.Request{
		OpName: "RemoveScannerConfigs",
		Query:  RemoveScannerConfigs_Operation,
		Variables: &__RemoveScannerConfigsInput{
			AnalyzerId: analyzerId,
		},
	}
	var err_ error

	var data_ RemoveScannerConfigsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ScannerConfigs.
const ScannerConfigs_Operation = `
query ScannerConfigs {
	scannerConfigs {
		configs {
			... scannerConfigData
		}
	}
}
fragment scannerConfigData on ScannerConfig {
	id
	inUse
	globalConfigs {
		id
		value
	}
	rulesets {
		id
		name
		inUse
		configs {
			id
			value
		}
	}
}
`

func ScannerConfigs(
	ctx_ context.Context,
	client_ graphql.Client,
) (*ScannerConfigsResponse, error) {
	req_ := &graphql.Request{
		OpName: "ScannerConfigs",
		Query:  ScannerConfigs_Operation,
	}
	var err_ error

	var data_ ScannerConfigsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by SecurityPosture.
const SecurityPosture_Operation = `
query SecurityPosture {
	securityPosture {
		filters {
			resourceProvisioningStatus {
				... FilterData
			}
			collection {
				... FilterData
				display {
					name
					provider
				}
			}
			missingCoverage {
				... FilterData
			}
			resourceAttribute {
				... FilterData
			}
			policyType {
				... FilterData
			}
			policy {
				... FilterData
				display {
					name
				}
			}
			provisionedAnalyzer {
				... FilterData
				display {
					analyzerId
					analyzerName
					rulesetName
				}
			}
		}
		account {
			... PolicyData
			assetType
		}
		providers {
			... ConnectionData
			edges {
				cursor
				node {
					providerId
					name
					stats {
						totalNeedAttention
						totalResources
					}
					collections {
						... ConnectionData
						edges {
							cursor
							node {
								collectionId
							}
						}
					}
					autoAssignment {
						id
						enabled
					}
				}
			}
		}
	}
}
fragment FilterData on FilterCount {
	value
	count
}
fragment PolicyData on HasPolicy {
	policy {
		policyId
		name
		source
		assignment
	}
}
fragment ConnectionData on Connection {
	totalCount
	pageInfo {
		hasNextPage
		hasPreviousPage
		startCursor
		endCursor
	}
}
`

func SecurityPosture(
	ctx_ context.Context,
	client_ graphql.Client,
) (*SecurityPostureResponse, error) {
	req_ := &graphql.Request{
		OpName: "SecurityPosture",
		Query:  SecurityPosture_Operation,
	}
	var err_ error

	var data_ SecurityPostureResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by SecurityPostureOnlyAccount.
const SecurityPostureOnlyAccount_Operation = `
query SecurityPostureOnlyAccount {
	securityPosture {
		account {
			... PolicyData
			assetType
		}
	}
}
fragment PolicyData on HasPolicy {
	policy {
		policyId
		name
		source
		assignment
	}
}
`

func SecurityPostureOnlyAccount(
	ctx_ context.Context,
	client_ graphql.Client,
) (*SecurityPostureOnlyAccountResponse, error) {
	req_ := &graphql.Request{
		OpName: "SecurityPostureOnlyAccount",
		Query:  SecurityPostureOnlyAccount_Operation,
	}
	var err_ error

	var data_ SecurityPostureOnlyAccountResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by SetAccountAutoAssignment.
const SetAccountAutoAssignment_Operation = `
mutation SetAccountAutoAssignment ($analyzerIds: [String!]!) {
	setAccountAutoAssignment(analyzerIds: $analyzerIds) {
		__typename
		... on OperationError {
			errorMessage
			errorType
		}
	}
}
`

func SetAccountAutoAssignment(
	ctx_ context.Context,
	client_ graphql.Client,
	analyzerIds []string,
) (*SetAccountAutoAssignmentResponse, error) {
	req_ := &graphql.Request{
		OpName: "SetAccountAutoAssignment",
		Query:  SetAccountAutoAssignment_Operation,
		Variables: &__SetAccountAutoAssignmentInput{
			AnalyzerIds: analyzerIds,
		},
	}
	var err_ error

	var data_ SetAccountAutoAssignmentResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by SetAnalyzerAutoAssignment.
const SetAnalyzerAutoAssignment_Operation = `
mutation SetAnalyzerAutoAssignment ($analyzerId: String!, $enabled: Boolean!) {
	setAnalyzerAutoAssignment(analyzerId: $analyzerId, enabled: $enabled) {
		__typename
		... on AutoAssignment {
			id
			enabled
		}
		... on OperationError {
			errorMessage
			errorType
		}
	}
}
`

func SetAnalyzerAutoAssignment(
	ctx_ context.Context,
	client_ graphql.Client,
	analyzerId string,
	enabled bool,
) (*SetAnalyzerAutoAssignmentResponse, error) {
	req_ := &graphql.Request{
		OpName: "SetAnalyzerAutoAssignment",
		Query:  SetAnalyzerAutoAssignment_Operation,
		Variables: &__SetAnalyzerAutoAssignmentInput{
			AnalyzerId: analyzerId,
			Enabled:    enabled,
		},
	}
	var err_ error

	var data_ SetAnalyzerAutoAssignmentResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by TriggerScan.
const TriggerScan_Operation = `
mutation TriggerScan ($assetId: String!, $analyzerId: String!) {
	triggerScan(assetId: $assetId, analyzerId: $analyzerId) {
		__typename
		... on OperationError {
			errorMessage
			errorType
		}
	}
}
`

func TriggerScan(
	ctx_ context.Context,
	client_ graphql.Client,
	assetId string,
	analyzerId string,
) (*TriggerScanResponse, error) {
	req_ := &graphql.Request{
		OpName: "TriggerScan",
		Query:  TriggerScan_Operation,
		Variables: &__TriggerScanInput{
			AssetId:    assetId,
			AnalyzerId: analyzerId,
		},
	}
	var err_ error

	var data_ TriggerScanResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by UpdateScannerConfigs.
const UpdateScannerConfigs_Operation = `
mutation UpdateScannerConfigs ($update: ScannerConfigUpdate!) {
	updateScannerConfigs(update: $update) {
		__typename
		... on ScannerConfig {
			... scannerConfigData
		}
		... on OperationError {
			errorMessage
			errorType
		}
	}
}
fragment scannerConfigData on ScannerConfig {
	id
	inUse
	globalConfigs {
		id
		value
	}
	rulesets {
		id
		name
		inUse
		configs {
			id
			value
		}
	}
}
`

func UpdateScannerConfigs(
	ctx_ context.Context,
	client_ graphql.Client,
	update ScannerConfigUpdate,
) (*UpdateScannerConfigsResponse, error) {
	req_ := &graphql.Request{
		OpName: "UpdateScannerConfigs",
		Query:  UpdateScannerConfigs_Operation,
		Variables: &__UpdateScannerConfigsInput{
			Update: update,
		},
	}
	var err_ error

	var data_ UpdateScannerConfigsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
